[{"name":"CLEAR","description":"com.niyajali.compose.sign.SignatureAction.CLEAR","location":"compose-signature/com.niyajali.compose.sign/-signature-action/-c-l-e-a-r/index.html","searchKeys":["CLEAR","CLEAR","com.niyajali.compose.sign.SignatureAction.CLEAR"]},{"name":"COMPLETED","description":"com.niyajali.compose.sign.SignatureInputState.COMPLETED","location":"compose-signature/com.niyajali.compose.sign/-signature-input-state/-c-o-m-p-l-e-t-e-d/index.html","searchKeys":["COMPLETED","COMPLETED","com.niyajali.compose.sign.SignatureInputState.COMPLETED"]},{"name":"DRAWING","description":"com.niyajali.compose.sign.SignatureInputState.DRAWING","location":"compose-signature/com.niyajali.compose.sign/-signature-input-state/-d-r-a-w-i-n-g/index.html","searchKeys":["DRAWING","DRAWING","com.niyajali.compose.sign.SignatureInputState.DRAWING"]},{"name":"IDLE","description":"com.niyajali.compose.sign.SignatureInputState.IDLE","location":"compose-signature/com.niyajali.compose.sign/-signature-input-state/-i-d-l-e/index.html","searchKeys":["IDLE","IDLE","com.niyajali.compose.sign.SignatureInputState.IDLE"]},{"name":"JPEG","description":"com.niyajali.compose.sign.SignatureExportFormat.JPEG","location":"compose-signature/com.niyajali.compose.sign/-signature-export-format/-j-p-e-g/index.html","searchKeys":["JPEG","JPEG","com.niyajali.compose.sign.SignatureExportFormat.JPEG"]},{"name":"PDF","description":"com.niyajali.compose.sign.SignatureExportFormat.PDF","location":"compose-signature/com.niyajali.compose.sign/-signature-export-format/-p-d-f/index.html","searchKeys":["PDF","PDF","com.niyajali.compose.sign.SignatureExportFormat.PDF"]},{"name":"PNG","description":"com.niyajali.compose.sign.SignatureExportFormat.PNG","location":"compose-signature/com.niyajali.compose.sign/-signature-export-format/-p-n-g/index.html","searchKeys":["PNG","PNG","com.niyajali.compose.sign.SignatureExportFormat.PNG"]},{"name":"REDO","description":"com.niyajali.compose.sign.SignatureAction.REDO","location":"compose-signature/com.niyajali.compose.sign/-signature-action/-r-e-d-o/index.html","searchKeys":["REDO","REDO","com.niyajali.compose.sign.SignatureAction.REDO"]},{"name":"SAVE","description":"com.niyajali.compose.sign.SignatureAction.SAVE","location":"compose-signature/com.niyajali.compose.sign/-signature-action/-s-a-v-e/index.html","searchKeys":["SAVE","SAVE","com.niyajali.compose.sign.SignatureAction.SAVE"]},{"name":"SVG","description":"com.niyajali.compose.sign.SignatureExportFormat.SVG","location":"compose-signature/com.niyajali.compose.sign/-signature-export-format/-s-v-g/index.html","searchKeys":["SVG","SVG","com.niyajali.compose.sign.SignatureExportFormat.SVG"]},{"name":"UNDO","description":"com.niyajali.compose.sign.SignatureAction.UNDO","location":"compose-signature/com.niyajali.compose.sign/-signature-action/-u-n-d-o/index.html","searchKeys":["UNDO","UNDO","com.niyajali.compose.sign.SignatureAction.UNDO"]},{"name":"abstract fun addPath(path: SignaturePath)","description":"com.niyajali.compose.sign.ISignatureState.addPath","location":"compose-signature/com.niyajali.compose.sign/-i-signature-state/add-path.html","searchKeys":["addPath","abstract fun addPath(path: SignaturePath)","com.niyajali.compose.sign.ISignatureState.addPath"]},{"name":"abstract fun canExecuteAction(action: SignatureAction, state: SignatureState): Boolean","description":"com.niyajali.compose.sign.SignatureActionHandler.canExecuteAction","location":"compose-signature/com.niyajali.compose.sign/-signature-action-handler/can-execute-action.html","searchKeys":["canExecuteAction","abstract fun canExecuteAction(action: SignatureAction, state: SignatureState): Boolean","com.niyajali.compose.sign.SignatureActionHandler.canExecuteAction"]},{"name":"abstract fun clear()","description":"com.niyajali.compose.sign.ISignatureState.clear","location":"compose-signature/com.niyajali.compose.sign/-i-signature-state/clear.html","searchKeys":["clear","abstract fun clear()","com.niyajali.compose.sign.ISignatureState.clear"]},{"name":"abstract fun executeAction(action: SignatureAction, state: SignatureState): SignatureActionResult","description":"com.niyajali.compose.sign.SignatureActionHandler.executeAction","location":"compose-signature/com.niyajali.compose.sign/-signature-action-handler/execute-action.html","searchKeys":["executeAction","abstract fun executeAction(action: SignatureAction, state: SignatureState): SignatureActionResult","com.niyajali.compose.sign.SignatureActionHandler.executeAction"]},{"name":"abstract fun redo()","description":"com.niyajali.compose.sign.ISignatureState.redo","location":"compose-signature/com.niyajali.compose.sign/-i-signature-state/redo.html","searchKeys":["redo","abstract fun redo()","com.niyajali.compose.sign.ISignatureState.redo"]},{"name":"abstract fun undo()","description":"com.niyajali.compose.sign.ISignatureState.undo","location":"compose-signature/com.niyajali.compose.sign/-i-signature-state/undo.html","searchKeys":["undo","abstract fun undo()","com.niyajali.compose.sign.ISignatureState.undo"]},{"name":"abstract fun updateSignature(bitmap: ImageBitmap)","description":"com.niyajali.compose.sign.ISignatureState.updateSignature","location":"compose-signature/com.niyajali.compose.sign/-i-signature-state/update-signature.html","searchKeys":["updateSignature","abstract fun updateSignature(bitmap: ImageBitmap)","com.niyajali.compose.sign.ISignatureState.updateSignature"]},{"name":"abstract val canRedo: Boolean","description":"com.niyajali.compose.sign.ISignatureState.canRedo","location":"compose-signature/com.niyajali.compose.sign/-i-signature-state/can-redo.html","searchKeys":["canRedo","abstract val canRedo: Boolean","com.niyajali.compose.sign.ISignatureState.canRedo"]},{"name":"abstract val canUndo: Boolean","description":"com.niyajali.compose.sign.ISignatureState.canUndo","location":"compose-signature/com.niyajali.compose.sign/-i-signature-state/can-undo.html","searchKeys":["canUndo","abstract val canUndo: Boolean","com.niyajali.compose.sign.ISignatureState.canUndo"]},{"name":"abstract val inputState: SignatureInputState","description":"com.niyajali.compose.sign.ISignatureState.inputState","location":"compose-signature/com.niyajali.compose.sign/-i-signature-state/input-state.html","searchKeys":["inputState","abstract val inputState: SignatureInputState","com.niyajali.compose.sign.ISignatureState.inputState"]},{"name":"abstract val paths: List<SignaturePath>","description":"com.niyajali.compose.sign.ISignatureState.paths","location":"compose-signature/com.niyajali.compose.sign/-i-signature-state/paths.html","searchKeys":["paths","abstract val paths: List<SignaturePath>","com.niyajali.compose.sign.ISignatureState.paths"]},{"name":"abstract val signature: ImageBitmap?","description":"com.niyajali.compose.sign.ISignatureState.signature","location":"compose-signature/com.niyajali.compose.sign/-i-signature-state/signature.html","searchKeys":["signature","abstract val signature: ImageBitmap?","com.niyajali.compose.sign.ISignatureState.signature"]},{"name":"class DefaultSignatureActionHandler : SignatureActionHandler","description":"com.niyajali.compose.sign.DefaultSignatureActionHandler","location":"compose-signature/com.niyajali.compose.sign/-default-signature-action-handler/index.html","searchKeys":["DefaultSignatureActionHandler","class DefaultSignatureActionHandler : SignatureActionHandler","com.niyajali.compose.sign.DefaultSignatureActionHandler"]},{"name":"class SignatureState : ISignatureState","description":"com.niyajali.compose.sign.SignatureState","location":"compose-signature/com.niyajali.compose.sign/-signature-state/index.html","searchKeys":["SignatureState","class SignatureState : ISignatureState","com.niyajali.compose.sign.SignatureState"]},{"name":"constructor()","description":"com.niyajali.compose.sign.DefaultSignatureActionHandler.DefaultSignatureActionHandler","location":"compose-signature/com.niyajali.compose.sign/-default-signature-action-handler/-default-signature-action-handler.html","searchKeys":["DefaultSignatureActionHandler","constructor()","com.niyajali.compose.sign.DefaultSignatureActionHandler.DefaultSignatureActionHandler"]},{"name":"constructor(format: SignatureExportFormat = SignatureExportFormat.PNG, width: Int = 800, height: Int = 400, backgroundColor: Color = Color.White, quality: Int = 90, includeBorder: Boolean = false, cropToBounds: Boolean = false)","description":"com.niyajali.compose.sign.SignatureExportConfig.SignatureExportConfig","location":"compose-signature/com.niyajali.compose.sign/-signature-export-config/-signature-export-config.html","searchKeys":["SignatureExportConfig","constructor(format: SignatureExportFormat = SignatureExportFormat.PNG, width: Int = 800, height: Int = 400, backgroundColor: Color = Color.White, quality: Int = 90, includeBorder: Boolean = false, cropToBounds: Boolean = false)","com.niyajali.compose.sign.SignatureExportConfig.SignatureExportConfig"]},{"name":"constructor(left: Float, top: Float, right: Float, bottom: Float)","description":"com.niyajali.compose.sign.SignatureBounds.SignatureBounds","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/-signature-bounds.html","searchKeys":["SignatureBounds","constructor(left: Float, top: Float, right: Float, bottom: Float)","com.niyajali.compose.sign.SignatureBounds.SignatureBounds"]},{"name":"constructor(pathCount: Int, totalLength: Float, bounds: SignatureBounds?, complexity: Int, timestamp: Long = Clock.System.now().toEpochMilliseconds())","description":"com.niyajali.compose.sign.SignatureMetadata.SignatureMetadata","location":"compose-signature/com.niyajali.compose.sign/-signature-metadata/-signature-metadata.html","searchKeys":["SignatureMetadata","constructor(pathCount: Int, totalLength: Float, bounds: SignatureBounds?, complexity: Int, timestamp: Long = Clock.System.now().toEpochMilliseconds())","com.niyajali.compose.sign.SignatureMetadata.SignatureMetadata"]},{"name":"constructor(showClear: Boolean = true, showSave: Boolean = true, showUndo: Boolean = true, showRedo: Boolean = true, confirmDestructive: Boolean = true, customLabels: Map<SignatureAction, String> = emptyMap())","description":"com.niyajali.compose.sign.SignatureActionConfig.SignatureActionConfig","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/-signature-action-config.html","searchKeys":["SignatureActionConfig","constructor(showClear: Boolean = true, showSave: Boolean = true, showUndo: Boolean = true, showRedo: Boolean = true, confirmDestructive: Boolean = true, customLabels: Map<SignatureAction, String> = emptyMap())","com.niyajali.compose.sign.SignatureActionConfig.SignatureActionConfig"]},{"name":"constructor(start: Offset, end: Offset, strokeWidth: Float = 5.0f, color: Color = Color.Black)","description":"com.niyajali.compose.sign.SignaturePath.SignaturePath","location":"compose-signature/com.niyajali.compose.sign/-signature-path/-signature-path.html","searchKeys":["SignaturePath","constructor(start: Offset, end: Offset, strokeWidth: Float = 5.0f, color: Color = Color.Black)","com.niyajali.compose.sign.SignaturePath.SignaturePath"]},{"name":"constructor(strokeColor: Color = Color.Black, strokeWidth: Dp = 3.dp, backgroundColor: Color = Color.White, borderStroke: BorderStroke? = BorderStroke(1.dp, Color.Gray), cornerShape: CornerBasedShape = RoundedCornerShape(8.dp), showGrid: Boolean = false, gridColor: Color = Color.Gray.copy(alpha = 0.3f), gridSpacing: Dp = 20.dp, isFullScreen: Boolean = false, minHeight: Dp = 200.dp, maxHeight: Dp = 400.dp, showActions: Boolean = false, enableSmoothDrawing: Boolean = true)","description":"com.niyajali.compose.sign.SignatureConfig.SignatureConfig","location":"compose-signature/com.niyajali.compose.sign/-signature-config/-signature-config.html","searchKeys":["SignatureConfig","constructor(strokeColor: Color = Color.Black, strokeWidth: Dp = 3.dp, backgroundColor: Color = Color.White, borderStroke: BorderStroke? = BorderStroke(1.dp, Color.Gray), cornerShape: CornerBasedShape = RoundedCornerShape(8.dp), showGrid: Boolean = false, gridColor: Color = Color.Gray.copy(alpha = 0.3f), gridSpacing: Dp = 20.dp, isFullScreen: Boolean = false, minHeight: Dp = 200.dp, maxHeight: Dp = 400.dp, showActions: Boolean = false, enableSmoothDrawing: Boolean = true)","com.niyajali.compose.sign.SignatureConfig.SignatureConfig"]},{"name":"constructor(success: Boolean, message: String? = null, action: SignatureAction)","description":"com.niyajali.compose.sign.SignatureActionResult.SignatureActionResult","location":"compose-signature/com.niyajali.compose.sign/-signature-action-result/-signature-action-result.html","searchKeys":["SignatureActionResult","constructor(success: Boolean, message: String? = null, action: SignatureAction)","com.niyajali.compose.sign.SignatureActionResult.SignatureActionResult"]},{"name":"data class SignatureActionConfig(val showClear: Boolean = true, val showSave: Boolean = true, val showUndo: Boolean = true, val showRedo: Boolean = true, val confirmDestructive: Boolean = true, val customLabels: Map<SignatureAction, String> = emptyMap())","description":"com.niyajali.compose.sign.SignatureActionConfig","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/index.html","searchKeys":["SignatureActionConfig","data class SignatureActionConfig(val showClear: Boolean = true, val showSave: Boolean = true, val showUndo: Boolean = true, val showRedo: Boolean = true, val confirmDestructive: Boolean = true, val customLabels: Map<SignatureAction, String> = emptyMap())","com.niyajali.compose.sign.SignatureActionConfig"]},{"name":"data class SignatureActionResult(val success: Boolean, val message: String? = null, val action: SignatureAction)","description":"com.niyajali.compose.sign.SignatureActionResult","location":"compose-signature/com.niyajali.compose.sign/-signature-action-result/index.html","searchKeys":["SignatureActionResult","data class SignatureActionResult(val success: Boolean, val message: String? = null, val action: SignatureAction)","com.niyajali.compose.sign.SignatureActionResult"]},{"name":"data class SignatureBounds(val left: Float, val top: Float, val right: Float, val bottom: Float)","description":"com.niyajali.compose.sign.SignatureBounds","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/index.html","searchKeys":["SignatureBounds","data class SignatureBounds(val left: Float, val top: Float, val right: Float, val bottom: Float)","com.niyajali.compose.sign.SignatureBounds"]},{"name":"data class SignatureConfig(val strokeColor: Color = Color.Black, val strokeWidth: Dp = 3.dp, val backgroundColor: Color = Color.White, val borderStroke: BorderStroke? = BorderStroke(1.dp, Color.Gray), val cornerShape: CornerBasedShape = RoundedCornerShape(8.dp), val showGrid: Boolean = false, val gridColor: Color = Color.Gray.copy(alpha = 0.3f), val gridSpacing: Dp = 20.dp, val isFullScreen: Boolean = false, val minHeight: Dp = 200.dp, val maxHeight: Dp = 400.dp, val showActions: Boolean = false, val enableSmoothDrawing: Boolean = true)","description":"com.niyajali.compose.sign.SignatureConfig","location":"compose-signature/com.niyajali.compose.sign/-signature-config/index.html","searchKeys":["SignatureConfig","data class SignatureConfig(val strokeColor: Color = Color.Black, val strokeWidth: Dp = 3.dp, val backgroundColor: Color = Color.White, val borderStroke: BorderStroke? = BorderStroke(1.dp, Color.Gray), val cornerShape: CornerBasedShape = RoundedCornerShape(8.dp), val showGrid: Boolean = false, val gridColor: Color = Color.Gray.copy(alpha = 0.3f), val gridSpacing: Dp = 20.dp, val isFullScreen: Boolean = false, val minHeight: Dp = 200.dp, val maxHeight: Dp = 400.dp, val showActions: Boolean = false, val enableSmoothDrawing: Boolean = true)","com.niyajali.compose.sign.SignatureConfig"]},{"name":"data class SignatureExportConfig(val format: SignatureExportFormat = SignatureExportFormat.PNG, val width: Int = 800, val height: Int = 400, val backgroundColor: Color = Color.White, val quality: Int = 90, val includeBorder: Boolean = false, val cropToBounds: Boolean = false)","description":"com.niyajali.compose.sign.SignatureExportConfig","location":"compose-signature/com.niyajali.compose.sign/-signature-export-config/index.html","searchKeys":["SignatureExportConfig","data class SignatureExportConfig(val format: SignatureExportFormat = SignatureExportFormat.PNG, val width: Int = 800, val height: Int = 400, val backgroundColor: Color = Color.White, val quality: Int = 90, val includeBorder: Boolean = false, val cropToBounds: Boolean = false)","com.niyajali.compose.sign.SignatureExportConfig"]},{"name":"data class SignatureMetadata(val pathCount: Int, val totalLength: Float, val bounds: SignatureBounds?, val complexity: Int, val timestamp: Long = Clock.System.now().toEpochMilliseconds())","description":"com.niyajali.compose.sign.SignatureMetadata","location":"compose-signature/com.niyajali.compose.sign/-signature-metadata/index.html","searchKeys":["SignatureMetadata","data class SignatureMetadata(val pathCount: Int, val totalLength: Float, val bounds: SignatureBounds?, val complexity: Int, val timestamp: Long = Clock.System.now().toEpochMilliseconds())","com.niyajali.compose.sign.SignatureMetadata"]},{"name":"data class SignaturePath(val start: Offset, val end: Offset, val strokeWidth: Float = 5.0f, val color: Color = Color.Black)","description":"com.niyajali.compose.sign.SignaturePath","location":"compose-signature/com.niyajali.compose.sign/-signature-path/index.html","searchKeys":["SignaturePath","data class SignaturePath(val start: Offset, val end: Offset, val strokeWidth: Float = 5.0f, val color: Color = Color.Black)","com.niyajali.compose.sign.SignaturePath"]},{"name":"enum SignatureAction : Enum<SignatureAction> ","description":"com.niyajali.compose.sign.SignatureAction","location":"compose-signature/com.niyajali.compose.sign/-signature-action/index.html","searchKeys":["SignatureAction","enum SignatureAction : Enum<SignatureAction> ","com.niyajali.compose.sign.SignatureAction"]},{"name":"enum SignatureExportFormat : Enum<SignatureExportFormat> ","description":"com.niyajali.compose.sign.SignatureExportFormat","location":"compose-signature/com.niyajali.compose.sign/-signature-export-format/index.html","searchKeys":["SignatureExportFormat","enum SignatureExportFormat : Enum<SignatureExportFormat> ","com.niyajali.compose.sign.SignatureExportFormat"]},{"name":"enum SignatureInputState : Enum<SignatureInputState> ","description":"com.niyajali.compose.sign.SignatureInputState","location":"compose-signature/com.niyajali.compose.sign/-signature-input-state/index.html","searchKeys":["SignatureInputState","enum SignatureInputState : Enum<SignatureInputState> ","com.niyajali.compose.sign.SignatureInputState"]},{"name":"fun ComposeSign(onSignatureUpdate: (ImageBitmap?) -> Unit, modifier: Modifier = Modifier, config: SignatureConfig = SignatureConfig(), state: SignatureState = rememberSignatureState(), onActionClicked: (SignatureAction) -> Unit? = null)","description":"com.niyajali.compose.sign.ComposeSign","location":"compose-signature/com.niyajali.compose.sign/-compose-sign.html","searchKeys":["ComposeSign","fun ComposeSign(onSignatureUpdate: (ImageBitmap?) -> Unit, modifier: Modifier = Modifier, config: SignatureConfig = SignatureConfig(), state: SignatureState = rememberSignatureState(), onActionClicked: (SignatureAction) -> Unit? = null)","com.niyajali.compose.sign.ComposeSign"]},{"name":"fun ComposeSign(onSignatureUpdate: (ImageBitmap?) -> Unit, modifier: Modifier = Modifier, state: SignatureState = rememberSignatureState())","description":"com.niyajali.compose.sign.ComposeSign","location":"compose-signature/com.niyajali.compose.sign/-compose-sign.html","searchKeys":["ComposeSign","fun ComposeSign(onSignatureUpdate: (ImageBitmap?) -> Unit, modifier: Modifier = Modifier, state: SignatureState = rememberSignatureState())","com.niyajali.compose.sign.ComposeSign"]},{"name":"fun ComposeSign(onSignatureUpdate: (ImageBitmap?) -> Unit, modifier: Modifier = Modifier, strokeColor: Color = Color.Black, strokeWidth: Dp = 3.dp, backgroundColor: Color = Color.White, showGrid: Boolean = false, state: SignatureState = rememberSignatureState())","description":"com.niyajali.compose.sign.ComposeSign","location":"compose-signature/com.niyajali.compose.sign/-compose-sign.html","searchKeys":["ComposeSign","fun ComposeSign(onSignatureUpdate: (ImageBitmap?) -> Unit, modifier: Modifier = Modifier, strokeColor: Color = Color.Black, strokeWidth: Dp = 3.dp, backgroundColor: Color = Color.White, showGrid: Boolean = false, state: SignatureState = rememberSignatureState())","com.niyajali.compose.sign.ComposeSign"]},{"name":"fun ComposeSignFullscreen(onSignatureUpdate: (ImageBitmap?) -> Unit, onDismiss: () -> Unit, modifier: Modifier = Modifier, config: SignatureConfig = SignatureConfig(\n        isFullScreen = true,\n        showActions = true\n    ), state: SignatureState = rememberSignatureState())","description":"com.niyajali.compose.sign.ComposeSignFullscreen","location":"compose-signature/com.niyajali.compose.sign/-compose-sign-fullscreen.html","searchKeys":["ComposeSignFullscreen","fun ComposeSignFullscreen(onSignatureUpdate: (ImageBitmap?) -> Unit, onDismiss: () -> Unit, modifier: Modifier = Modifier, config: SignatureConfig = SignatureConfig(\n        isFullScreen = true,\n        showActions = true\n    ), state: SignatureState = rememberSignatureState())","com.niyajali.compose.sign.ComposeSignFullscreen"]},{"name":"fun ImageBitmap.getAspectRatio(): Float","description":"com.niyajali.compose.sign.getAspectRatio","location":"compose-signature/com.niyajali.compose.sign/get-aspect-ratio.html","searchKeys":["getAspectRatio","fun ImageBitmap.getAspectRatio(): Float","com.niyajali.compose.sign.getAspectRatio"]},{"name":"fun ImageBitmap.getDimensionDescription(): String","description":"com.niyajali.compose.sign.getDimensionDescription","location":"compose-signature/com.niyajali.compose.sign/get-dimension-description.html","searchKeys":["getDimensionDescription","fun ImageBitmap.getDimensionDescription(): String","com.niyajali.compose.sign.getDimensionDescription"]},{"name":"fun ImageBitmap.isLandscape(): Boolean","description":"com.niyajali.compose.sign.isLandscape","location":"compose-signature/com.niyajali.compose.sign/is-landscape.html","searchKeys":["isLandscape","fun ImageBitmap.isLandscape(): Boolean","com.niyajali.compose.sign.isLandscape"]},{"name":"fun ImageBitmap.isPortrait(): Boolean","description":"com.niyajali.compose.sign.isPortrait","location":"compose-signature/com.niyajali.compose.sign/is-portrait.html","searchKeys":["isPortrait","fun ImageBitmap.isPortrait(): Boolean","com.niyajali.compose.sign.isPortrait"]},{"name":"fun List<SignaturePath>.filterByColor(color: Color): List<SignaturePath>","description":"com.niyajali.compose.sign.filterByColor","location":"compose-signature/com.niyajali.compose.sign/filter-by-color.html","searchKeys":["filterByColor","fun List<SignaturePath>.filterByColor(color: Color): List<SignaturePath>","com.niyajali.compose.sign.filterByColor"]},{"name":"fun List<SignaturePath>.filterByStrokeWidth(minWidth: Float, maxWidth: Float): List<SignaturePath>","description":"com.niyajali.compose.sign.filterByStrokeWidth","location":"compose-signature/com.niyajali.compose.sign/filter-by-stroke-width.html","searchKeys":["filterByStrokeWidth","fun List<SignaturePath>.filterByStrokeWidth(minWidth: Float, maxWidth: Float): List<SignaturePath>","com.niyajali.compose.sign.filterByStrokeWidth"]},{"name":"fun List<SignaturePath>.getAverageStrokeWidth(): Float","description":"com.niyajali.compose.sign.getAverageStrokeWidth","location":"compose-signature/com.niyajali.compose.sign/get-average-stroke-width.html","searchKeys":["getAverageStrokeWidth","fun List<SignaturePath>.getAverageStrokeWidth(): Float","com.niyajali.compose.sign.getAverageStrokeWidth"]},{"name":"fun List<SignaturePath>.getUniqueColors(): Set<Color>","description":"com.niyajali.compose.sign.getUniqueColors","location":"compose-signature/com.niyajali.compose.sign/get-unique-colors.html","searchKeys":["getUniqueColors","fun List<SignaturePath>.getUniqueColors(): Set<Color>","com.niyajali.compose.sign.getUniqueColors"]},{"name":"fun SignatureBounds.getAspectRatio(): Float","description":"com.niyajali.compose.sign.getAspectRatio","location":"compose-signature/com.niyajali.compose.sign/get-aspect-ratio.html","searchKeys":["getAspectRatio","fun SignatureBounds.getAspectRatio(): Float","com.niyajali.compose.sign.getAspectRatio"]},{"name":"fun SignatureBounds.isLandscape(): Boolean","description":"com.niyajali.compose.sign.isLandscape","location":"compose-signature/com.niyajali.compose.sign/is-landscape.html","searchKeys":["isLandscape","fun SignatureBounds.isLandscape(): Boolean","com.niyajali.compose.sign.isLandscape"]},{"name":"fun SignatureBounds.isPortrait(): Boolean","description":"com.niyajali.compose.sign.isPortrait","location":"compose-signature/com.niyajali.compose.sign/is-portrait.html","searchKeys":["isPortrait","fun SignatureBounds.isPortrait(): Boolean","com.niyajali.compose.sign.isPortrait"]},{"name":"fun SignatureBounds.isSquare(tolerance: Float = 0.2f): Boolean","description":"com.niyajali.compose.sign.isSquare","location":"compose-signature/com.niyajali.compose.sign/is-square.html","searchKeys":["isSquare","fun SignatureBounds.isSquare(tolerance: Float = 0.2f): Boolean","com.niyajali.compose.sign.isSquare"]},{"name":"fun SignatureConfig.asAccessible(highContrast: Boolean = true): SignatureConfig","description":"com.niyajali.compose.sign.asAccessible","location":"compose-signature/com.niyajali.compose.sign/as-accessible.html","searchKeys":["asAccessible","fun SignatureConfig.asAccessible(highContrast: Boolean = true): SignatureConfig","com.niyajali.compose.sign.asAccessible"]},{"name":"fun SignatureConfig.asDarkTheme(): SignatureConfig","description":"com.niyajali.compose.sign.asDarkTheme","location":"compose-signature/com.niyajali.compose.sign/as-dark-theme.html","searchKeys":["asDarkTheme","fun SignatureConfig.asDarkTheme(): SignatureConfig","com.niyajali.compose.sign.asDarkTheme"]},{"name":"fun SignatureConfig.asLightTheme(): SignatureConfig","description":"com.niyajali.compose.sign.asLightTheme","location":"compose-signature/com.niyajali.compose.sign/as-light-theme.html","searchKeys":["asLightTheme","fun SignatureConfig.asLightTheme(): SignatureConfig","com.niyajali.compose.sign.asLightTheme"]},{"name":"fun SignaturePath.getAngle(): Float","description":"com.niyajali.compose.sign.getAngle","location":"compose-signature/com.niyajali.compose.sign/get-angle.html","searchKeys":["getAngle","fun SignaturePath.getAngle(): Float","com.niyajali.compose.sign.getAngle"]},{"name":"fun SignaturePath.isHorizontal(threshold: Float = 15.0f): Boolean","description":"com.niyajali.compose.sign.isHorizontal","location":"compose-signature/com.niyajali.compose.sign/is-horizontal.html","searchKeys":["isHorizontal","fun SignaturePath.isHorizontal(threshold: Float = 15.0f): Boolean","com.niyajali.compose.sign.isHorizontal"]},{"name":"fun SignaturePath.isVertical(threshold: Float = 15.0f): Boolean","description":"com.niyajali.compose.sign.isVertical","location":"compose-signature/com.niyajali.compose.sign/is-vertical.html","searchKeys":["isVertical","fun SignaturePath.isVertical(threshold: Float = 15.0f): Boolean","com.niyajali.compose.sign.isVertical"]},{"name":"fun SignatureState.exportScaledSignature(targetWidth: Int, targetHeight: Int, maintainAspectRatio: Boolean = true, backgroundColor: Color = Color.White): ImageBitmap?","description":"com.niyajali.compose.sign.exportScaledSignature","location":"compose-signature/com.niyajali.compose.sign/export-scaled-signature.html","searchKeys":["exportScaledSignature","fun SignatureState.exportScaledSignature(targetWidth: Int, targetHeight: Int, maintainAspectRatio: Boolean = true, backgroundColor: Color = Color.White): ImageBitmap?","com.niyajali.compose.sign.exportScaledSignature"]},{"name":"fun SignatureState.exportSignature(width: Int, height: Int, backgroundColor: Color = Color.White): ImageBitmap?","description":"com.niyajali.compose.sign.exportSignature","location":"compose-signature/com.niyajali.compose.sign/export-signature.html","searchKeys":["exportSignature","fun SignatureState.exportSignature(width: Int, height: Int, backgroundColor: Color = Color.White): ImageBitmap?","com.niyajali.compose.sign.exportSignature"]},{"name":"fun SignatureState.getComplexityScore(): Int","description":"com.niyajali.compose.sign.getComplexityScore","location":"compose-signature/com.niyajali.compose.sign/get-complexity-score.html","searchKeys":["getComplexityScore","fun SignatureState.getComplexityScore(): Int","com.niyajali.compose.sign.getComplexityScore"]},{"name":"fun SignatureState.getDescription(): String","description":"com.niyajali.compose.sign.getDescription","location":"compose-signature/com.niyajali.compose.sign/get-description.html","searchKeys":["getDescription","fun SignatureState.getDescription(): String","com.niyajali.compose.sign.getDescription"]},{"name":"fun SignatureState.getMetadata(): SignatureMetadata","description":"com.niyajali.compose.sign.getMetadata","location":"compose-signature/com.niyajali.compose.sign/get-metadata.html","searchKeys":["getMetadata","fun SignatureState.getMetadata(): SignatureMetadata","com.niyajali.compose.sign.getMetadata"]},{"name":"fun SignatureState.getSignatureBounds(): SignatureBounds?","description":"com.niyajali.compose.sign.getSignatureBounds","location":"compose-signature/com.niyajali.compose.sign/get-signature-bounds.html","searchKeys":["getSignatureBounds","fun SignatureState.getSignatureBounds(): SignatureBounds?","com.niyajali.compose.sign.getSignatureBounds"]},{"name":"fun SignatureState.getTotalLength(): Float","description":"com.niyajali.compose.sign.getTotalLength","location":"compose-signature/com.niyajali.compose.sign/get-total-length.html","searchKeys":["getTotalLength","fun SignatureState.getTotalLength(): Float","com.niyajali.compose.sign.getTotalLength"]},{"name":"fun SignatureState.isEmpty(): Boolean","description":"com.niyajali.compose.sign.isEmpty","location":"compose-signature/com.niyajali.compose.sign/is-empty.html","searchKeys":["isEmpty","fun SignatureState.isEmpty(): Boolean","com.niyajali.compose.sign.isEmpty"]},{"name":"fun SignatureState.isNotEmpty(): Boolean","description":"com.niyajali.compose.sign.isNotEmpty","location":"compose-signature/com.niyajali.compose.sign/is-not-empty.html","searchKeys":["isNotEmpty","fun SignatureState.isNotEmpty(): Boolean","com.niyajali.compose.sign.isNotEmpty"]},{"name":"fun SignatureState.isValid(minPaths: Int = 5, minLength: Float = 100.0f, minComplexity: Int = 10): Boolean","description":"com.niyajali.compose.sign.isValid","location":"compose-signature/com.niyajali.compose.sign/is-valid.html","searchKeys":["isValid","fun SignatureState.isValid(minPaths: Int = 5, minLength: Float = 100.0f, minComplexity: Int = 10): Boolean","com.niyajali.compose.sign.isValid"]},{"name":"fun area(): Float","description":"com.niyajali.compose.sign.SignatureBounds.area","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/area.html","searchKeys":["area","fun area(): Float","com.niyajali.compose.sign.SignatureBounds.area"]},{"name":"fun asFullScreen(showActions: Boolean = true): SignatureConfig","description":"com.niyajali.compose.sign.SignatureConfig.asFullScreen","location":"compose-signature/com.niyajali.compose.sign/-signature-config/as-full-screen.html","searchKeys":["asFullScreen","fun asFullScreen(showActions: Boolean = true): SignatureConfig","com.niyajali.compose.sign.SignatureConfig.asFullScreen"]},{"name":"fun complexityDescription(): String","description":"com.niyajali.compose.sign.SignatureMetadata.complexityDescription","location":"compose-signature/com.niyajali.compose.sign/-signature-metadata/complexity-description.html","searchKeys":["complexityDescription","fun complexityDescription(): String","com.niyajali.compose.sign.SignatureMetadata.complexityDescription"]},{"name":"fun contains(point: Offset): Boolean","description":"com.niyajali.compose.sign.SignatureBounds.contains","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/contains.html","searchKeys":["contains","fun contains(point: Offset): Boolean","com.niyajali.compose.sign.SignatureBounds.contains"]},{"name":"fun failure(action: SignatureAction, message: String): SignatureActionResult","description":"com.niyajali.compose.sign.SignatureActionResult.Companion.failure","location":"compose-signature/com.niyajali.compose.sign/-signature-action-result/-companion/failure.html","searchKeys":["failure","fun failure(action: SignatureAction, message: String): SignatureActionResult","com.niyajali.compose.sign.SignatureActionResult.Companion.failure"]},{"name":"fun getDescription(): String","description":"com.niyajali.compose.sign.SignatureAction.getDescription","location":"compose-signature/com.niyajali.compose.sign/-signature-action/get-description.html","searchKeys":["getDescription","fun getDescription(): String","com.niyajali.compose.sign.SignatureAction.getDescription"]},{"name":"fun getDisplayName(): String","description":"com.niyajali.compose.sign.SignatureAction.getDisplayName","location":"compose-signature/com.niyajali.compose.sign/-signature-action/get-display-name.html","searchKeys":["getDisplayName","fun getDisplayName(): String","com.niyajali.compose.sign.SignatureAction.getDisplayName"]},{"name":"fun getLabelForAction(action: SignatureAction): String","description":"com.niyajali.compose.sign.SignatureActionConfig.getLabelForAction","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/get-label-for-action.html","searchKeys":["getLabelForAction","fun getLabelForAction(action: SignatureAction): String","com.niyajali.compose.sign.SignatureActionConfig.getLabelForAction"]},{"name":"fun getVisibleActions(): List<SignatureAction>","description":"com.niyajali.compose.sign.SignatureActionConfig.getVisibleActions","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/get-visible-actions.html","searchKeys":["getVisibleActions","fun getVisibleActions(): List<SignatureAction>","com.niyajali.compose.sign.SignatureActionConfig.getVisibleActions"]},{"name":"fun intersectsWith(other: SignaturePath): Boolean","description":"com.niyajali.compose.sign.SignaturePath.intersectsWith","location":"compose-signature/com.niyajali.compose.sign/-signature-path/intersects-with.html","searchKeys":["intersectsWith","fun intersectsWith(other: SignaturePath): Boolean","com.niyajali.compose.sign.SignaturePath.intersectsWith"]},{"name":"fun isComplex(): Boolean","description":"com.niyajali.compose.sign.SignatureMetadata.isComplex","location":"compose-signature/com.niyajali.compose.sign/-signature-metadata/is-complex.html","searchKeys":["isComplex","fun isComplex(): Boolean","com.niyajali.compose.sign.SignatureMetadata.isComplex"]},{"name":"fun isDestructive(): Boolean","description":"com.niyajali.compose.sign.SignatureAction.isDestructive","location":"compose-signature/com.niyajali.compose.sign/-signature-action/is-destructive.html","searchKeys":["isDestructive","fun isDestructive(): Boolean","com.niyajali.compose.sign.SignatureAction.isDestructive"]},{"name":"fun isSimple(): Boolean","description":"com.niyajali.compose.sign.SignatureMetadata.isSimple","location":"compose-signature/com.niyajali.compose.sign/-signature-metadata/is-simple.html","searchKeys":["isSimple","fun isSimple(): Boolean","com.niyajali.compose.sign.SignatureMetadata.isSimple"]},{"name":"fun isValid(): Boolean","description":"com.niyajali.compose.sign.SignatureBounds.isValid","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/is-valid.html","searchKeys":["isValid","fun isValid(): Boolean","com.niyajali.compose.sign.SignatureBounds.isValid"]},{"name":"fun length(): Float","description":"com.niyajali.compose.sign.SignaturePath.length","location":"compose-signature/com.niyajali.compose.sign/-signature-path/length.html","searchKeys":["length","fun length(): Float","com.niyajali.compose.sign.SignaturePath.length"]},{"name":"fun midpoint(): Offset","description":"com.niyajali.compose.sign.SignaturePath.midpoint","location":"compose-signature/com.niyajali.compose.sign/-signature-path/midpoint.html","searchKeys":["midpoint","fun midpoint(): Offset","com.niyajali.compose.sign.SignaturePath.midpoint"]},{"name":"fun rememberSignatureState(): SignatureState","description":"com.niyajali.compose.sign.rememberSignatureState","location":"compose-signature/com.niyajali.compose.sign/remember-signature-state.html","searchKeys":["rememberSignatureState","fun rememberSignatureState(): SignatureState","com.niyajali.compose.sign.rememberSignatureState"]},{"name":"fun requiresConfirmation(): Boolean","description":"com.niyajali.compose.sign.SignatureAction.requiresConfirmation","location":"compose-signature/com.niyajali.compose.sign/-signature-action/requires-confirmation.html","searchKeys":["requiresConfirmation","fun requiresConfirmation(): Boolean","com.niyajali.compose.sign.SignatureAction.requiresConfirmation"]},{"name":"fun shouldShowAction(action: SignatureAction): Boolean","description":"com.niyajali.compose.sign.SignatureActionConfig.shouldShowAction","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/should-show-action.html","searchKeys":["shouldShowAction","fun shouldShowAction(action: SignatureAction): Boolean","com.niyajali.compose.sign.SignatureActionConfig.shouldShowAction"]},{"name":"fun success(action: SignatureAction, message: String? = null): SignatureActionResult","description":"com.niyajali.compose.sign.SignatureActionResult.Companion.success","location":"compose-signature/com.niyajali.compose.sign/-signature-action-result/-companion/success.html","searchKeys":["success","fun success(action: SignatureAction, message: String? = null): SignatureActionResult","com.niyajali.compose.sign.SignatureActionResult.Companion.success"]},{"name":"fun valueOf(value: String): SignatureAction","description":"com.niyajali.compose.sign.SignatureAction.valueOf","location":"compose-signature/com.niyajali.compose.sign/-signature-action/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SignatureAction","com.niyajali.compose.sign.SignatureAction.valueOf"]},{"name":"fun valueOf(value: String): SignatureExportFormat","description":"com.niyajali.compose.sign.SignatureExportFormat.valueOf","location":"compose-signature/com.niyajali.compose.sign/-signature-export-format/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SignatureExportFormat","com.niyajali.compose.sign.SignatureExportFormat.valueOf"]},{"name":"fun valueOf(value: String): SignatureInputState","description":"com.niyajali.compose.sign.SignatureInputState.valueOf","location":"compose-signature/com.niyajali.compose.sign/-signature-input-state/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SignatureInputState","com.niyajali.compose.sign.SignatureInputState.valueOf"]},{"name":"fun values(): Array<SignatureAction>","description":"com.niyajali.compose.sign.SignatureAction.values","location":"compose-signature/com.niyajali.compose.sign/-signature-action/values.html","searchKeys":["values","fun values(): Array<SignatureAction>","com.niyajali.compose.sign.SignatureAction.values"]},{"name":"fun values(): Array<SignatureExportFormat>","description":"com.niyajali.compose.sign.SignatureExportFormat.values","location":"compose-signature/com.niyajali.compose.sign/-signature-export-format/values.html","searchKeys":["values","fun values(): Array<SignatureExportFormat>","com.niyajali.compose.sign.SignatureExportFormat.values"]},{"name":"fun values(): Array<SignatureInputState>","description":"com.niyajali.compose.sign.SignatureInputState.values","location":"compose-signature/com.niyajali.compose.sign/-signature-input-state/values.html","searchKeys":["values","fun values(): Array<SignatureInputState>","com.niyajali.compose.sign.SignatureInputState.values"]},{"name":"fun withAppearance(backgroundColor: Color = this.backgroundColor, borderStroke: BorderStroke? = this.borderStroke, cornerShape: CornerBasedShape = this.cornerShape): SignatureConfig","description":"com.niyajali.compose.sign.SignatureConfig.withAppearance","location":"compose-signature/com.niyajali.compose.sign/-signature-config/with-appearance.html","searchKeys":["withAppearance","fun withAppearance(backgroundColor: Color = this.backgroundColor, borderStroke: BorderStroke? = this.borderStroke, cornerShape: CornerBasedShape = this.cornerShape): SignatureConfig","com.niyajali.compose.sign.SignatureConfig.withAppearance"]},{"name":"fun withGrid(enabled: Boolean = true, color: Color = Color.Gray.copy(alpha = 0.3f), spacing: Dp = 20.dp): SignatureConfig","description":"com.niyajali.compose.sign.SignatureConfig.withGrid","location":"compose-signature/com.niyajali.compose.sign/-signature-config/with-grid.html","searchKeys":["withGrid","fun withGrid(enabled: Boolean = true, color: Color = Color.Gray.copy(alpha = 0.3f), spacing: Dp = 20.dp): SignatureConfig","com.niyajali.compose.sign.SignatureConfig.withGrid"]},{"name":"fun withStroke(color: Color = strokeColor, width: Dp = strokeWidth): SignatureConfig","description":"com.niyajali.compose.sign.SignatureConfig.withStroke","location":"compose-signature/com.niyajali.compose.sign/-signature-config/with-stroke.html","searchKeys":["withStroke","fun withStroke(color: Color = strokeColor, width: Dp = strokeWidth): SignatureConfig","com.niyajali.compose.sign.SignatureConfig.withStroke"]},{"name":"interface ISignatureState","description":"com.niyajali.compose.sign.ISignatureState","location":"compose-signature/com.niyajali.compose.sign/-i-signature-state/index.html","searchKeys":["ISignatureState","interface ISignatureState","com.niyajali.compose.sign.ISignatureState"]},{"name":"interface SignatureActionHandler","description":"com.niyajali.compose.sign.SignatureActionHandler","location":"compose-signature/com.niyajali.compose.sign/-signature-action-handler/index.html","searchKeys":["SignatureActionHandler","interface SignatureActionHandler","com.niyajali.compose.sign.SignatureActionHandler"]},{"name":"object Companion","description":"com.niyajali.compose.sign.SignatureActionConfig.Companion","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/-companion/index.html","searchKeys":["Companion","object Companion","com.niyajali.compose.sign.SignatureActionConfig.Companion"]},{"name":"object Companion","description":"com.niyajali.compose.sign.SignatureActionResult.Companion","location":"compose-signature/com.niyajali.compose.sign/-signature-action-result/-companion/index.html","searchKeys":["Companion","object Companion","com.niyajali.compose.sign.SignatureActionResult.Companion"]},{"name":"object Companion","description":"com.niyajali.compose.sign.SignatureConfig.Companion","location":"compose-signature/com.niyajali.compose.sign/-signature-config/-companion/index.html","searchKeys":["Companion","object Companion","com.niyajali.compose.sign.SignatureConfig.Companion"]},{"name":"object Companion","description":"com.niyajali.compose.sign.SignatureState.Companion","location":"compose-signature/com.niyajali.compose.sign/-signature-state/-companion/index.html","searchKeys":["Companion","object Companion","com.niyajali.compose.sign.SignatureState.Companion"]},{"name":"open override fun addPath(path: SignaturePath)","description":"com.niyajali.compose.sign.SignatureState.addPath","location":"compose-signature/com.niyajali.compose.sign/-signature-state/add-path.html","searchKeys":["addPath","open override fun addPath(path: SignaturePath)","com.niyajali.compose.sign.SignatureState.addPath"]},{"name":"open override fun canExecuteAction(action: SignatureAction, state: SignatureState): Boolean","description":"com.niyajali.compose.sign.DefaultSignatureActionHandler.canExecuteAction","location":"compose-signature/com.niyajali.compose.sign/-default-signature-action-handler/can-execute-action.html","searchKeys":["canExecuteAction","open override fun canExecuteAction(action: SignatureAction, state: SignatureState): Boolean","com.niyajali.compose.sign.DefaultSignatureActionHandler.canExecuteAction"]},{"name":"open override fun clear()","description":"com.niyajali.compose.sign.SignatureState.clear","location":"compose-signature/com.niyajali.compose.sign/-signature-state/clear.html","searchKeys":["clear","open override fun clear()","com.niyajali.compose.sign.SignatureState.clear"]},{"name":"open override fun executeAction(action: SignatureAction, state: SignatureState): SignatureActionResult","description":"com.niyajali.compose.sign.DefaultSignatureActionHandler.executeAction","location":"compose-signature/com.niyajali.compose.sign/-default-signature-action-handler/execute-action.html","searchKeys":["executeAction","open override fun executeAction(action: SignatureAction, state: SignatureState): SignatureActionResult","com.niyajali.compose.sign.DefaultSignatureActionHandler.executeAction"]},{"name":"open override fun redo()","description":"com.niyajali.compose.sign.SignatureState.redo","location":"compose-signature/com.niyajali.compose.sign/-signature-state/redo.html","searchKeys":["redo","open override fun redo()","com.niyajali.compose.sign.SignatureState.redo"]},{"name":"open override fun undo()","description":"com.niyajali.compose.sign.SignatureState.undo","location":"compose-signature/com.niyajali.compose.sign/-signature-state/undo.html","searchKeys":["undo","open override fun undo()","com.niyajali.compose.sign.SignatureState.undo"]},{"name":"open override fun updateSignature(bitmap: ImageBitmap)","description":"com.niyajali.compose.sign.SignatureState.updateSignature","location":"compose-signature/com.niyajali.compose.sign/-signature-state/update-signature.html","searchKeys":["updateSignature","open override fun updateSignature(bitmap: ImageBitmap)","com.niyajali.compose.sign.SignatureState.updateSignature"]},{"name":"open override val canRedo: Boolean","description":"com.niyajali.compose.sign.SignatureState.canRedo","location":"compose-signature/com.niyajali.compose.sign/-signature-state/can-redo.html","searchKeys":["canRedo","open override val canRedo: Boolean","com.niyajali.compose.sign.SignatureState.canRedo"]},{"name":"open override val canUndo: Boolean","description":"com.niyajali.compose.sign.SignatureState.canUndo","location":"compose-signature/com.niyajali.compose.sign/-signature-state/can-undo.html","searchKeys":["canUndo","open override val canUndo: Boolean","com.niyajali.compose.sign.SignatureState.canUndo"]},{"name":"open override val inputState: SignatureInputState","description":"com.niyajali.compose.sign.SignatureState.inputState","location":"compose-signature/com.niyajali.compose.sign/-signature-state/input-state.html","searchKeys":["inputState","open override val inputState: SignatureInputState","com.niyajali.compose.sign.SignatureState.inputState"]},{"name":"open override val paths: List<SignaturePath>","description":"com.niyajali.compose.sign.SignatureState.paths","location":"compose-signature/com.niyajali.compose.sign/-signature-state/paths.html","searchKeys":["paths","open override val paths: List<SignaturePath>","com.niyajali.compose.sign.SignatureState.paths"]},{"name":"open override val signature: ImageBitmap?","description":"com.niyajali.compose.sign.SignatureState.signature","location":"compose-signature/com.niyajali.compose.sign/-signature-state/signature.html","searchKeys":["signature","open override val signature: ImageBitmap?","com.niyajali.compose.sign.SignatureState.signature"]},{"name":"val Complete: SignatureActionConfig","description":"com.niyajali.compose.sign.SignatureActionConfig.Companion.Complete","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/-companion/-complete.html","searchKeys":["Complete","val Complete: SignatureActionConfig","com.niyajali.compose.sign.SignatureActionConfig.Companion.Complete"]},{"name":"val Creative: SignatureConfig","description":"com.niyajali.compose.sign.SignatureConfig.Companion.Creative","location":"compose-signature/com.niyajali.compose.sign/-signature-config/-companion/-creative.html","searchKeys":["Creative","val Creative: SignatureConfig","com.niyajali.compose.sign.SignatureConfig.Companion.Creative"]},{"name":"val Default: SignatureConfig","description":"com.niyajali.compose.sign.SignatureConfig.Companion.Default","location":"compose-signature/com.niyajali.compose.sign/-signature-config/-companion/-default.html","searchKeys":["Default","val Default: SignatureConfig","com.niyajali.compose.sign.SignatureConfig.Companion.Default"]},{"name":"val EditOnly: SignatureActionConfig","description":"com.niyajali.compose.sign.SignatureActionConfig.Companion.EditOnly","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/-companion/-edit-only.html","searchKeys":["EditOnly","val EditOnly: SignatureActionConfig","com.niyajali.compose.sign.SignatureActionConfig.Companion.EditOnly"]},{"name":"val Essential: SignatureActionConfig","description":"com.niyajali.compose.sign.SignatureActionConfig.Companion.Essential","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/-companion/-essential.html","searchKeys":["Essential","val Essential: SignatureActionConfig","com.niyajali.compose.sign.SignatureActionConfig.Companion.Essential"]},{"name":"val FormIntegration: SignatureConfig","description":"com.niyajali.compose.sign.SignatureConfig.Companion.FormIntegration","location":"compose-signature/com.niyajali.compose.sign/-signature-config/-companion/-form-integration.html","searchKeys":["FormIntegration","val FormIntegration: SignatureConfig","com.niyajali.compose.sign.SignatureConfig.Companion.FormIntegration"]},{"name":"val Fullscreen: SignatureConfig","description":"com.niyajali.compose.sign.SignatureConfig.Companion.Fullscreen","location":"compose-signature/com.niyajali.compose.sign/-signature-config/-companion/-fullscreen.html","searchKeys":["Fullscreen","val Fullscreen: SignatureConfig","com.niyajali.compose.sign.SignatureConfig.Companion.Fullscreen"]},{"name":"val Professional: SignatureConfig","description":"com.niyajali.compose.sign.SignatureConfig.Companion.Professional","location":"compose-signature/com.niyajali.compose.sign/-signature-config/-companion/-professional.html","searchKeys":["Professional","val Professional: SignatureConfig","com.niyajali.compose.sign.SignatureConfig.Companion.Professional"]},{"name":"val ReadOnly: SignatureActionConfig","description":"com.niyajali.compose.sign.SignatureActionConfig.Companion.ReadOnly","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/-companion/-read-only.html","searchKeys":["ReadOnly","val ReadOnly: SignatureActionConfig","com.niyajali.compose.sign.SignatureActionConfig.Companion.ReadOnly"]},{"name":"val Saver: Saver<SignatureState, *>","description":"com.niyajali.compose.sign.SignatureState.Companion.Saver","location":"compose-signature/com.niyajali.compose.sign/-signature-state/-companion/-saver.html","searchKeys":["Saver","val Saver: Saver<SignatureState, *>","com.niyajali.compose.sign.SignatureState.Companion.Saver"]},{"name":"val ThickStroke: SignatureConfig","description":"com.niyajali.compose.sign.SignatureConfig.Companion.ThickStroke","location":"compose-signature/com.niyajali.compose.sign/-signature-config/-companion/-thick-stroke.html","searchKeys":["ThickStroke","val ThickStroke: SignatureConfig","com.niyajali.compose.sign.SignatureConfig.Companion.ThickStroke"]},{"name":"val WithGrid: SignatureConfig","description":"com.niyajali.compose.sign.SignatureConfig.Companion.WithGrid","location":"compose-signature/com.niyajali.compose.sign/-signature-config/-companion/-with-grid.html","searchKeys":["WithGrid","val WithGrid: SignatureConfig","com.niyajali.compose.sign.SignatureConfig.Companion.WithGrid"]},{"name":"val action: SignatureAction","description":"com.niyajali.compose.sign.SignatureActionResult.action","location":"compose-signature/com.niyajali.compose.sign/-signature-action-result/action.html","searchKeys":["action","val action: SignatureAction","com.niyajali.compose.sign.SignatureActionResult.action"]},{"name":"val backgroundColor: Color","description":"com.niyajali.compose.sign.SignatureConfig.backgroundColor","location":"compose-signature/com.niyajali.compose.sign/-signature-config/background-color.html","searchKeys":["backgroundColor","val backgroundColor: Color","com.niyajali.compose.sign.SignatureConfig.backgroundColor"]},{"name":"val backgroundColor: Color","description":"com.niyajali.compose.sign.SignatureExportConfig.backgroundColor","location":"compose-signature/com.niyajali.compose.sign/-signature-export-config/background-color.html","searchKeys":["backgroundColor","val backgroundColor: Color","com.niyajali.compose.sign.SignatureExportConfig.backgroundColor"]},{"name":"val borderStroke: BorderStroke?","description":"com.niyajali.compose.sign.SignatureConfig.borderStroke","location":"compose-signature/com.niyajali.compose.sign/-signature-config/border-stroke.html","searchKeys":["borderStroke","val borderStroke: BorderStroke?","com.niyajali.compose.sign.SignatureConfig.borderStroke"]},{"name":"val bottom: Float","description":"com.niyajali.compose.sign.SignatureBounds.bottom","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/bottom.html","searchKeys":["bottom","val bottom: Float","com.niyajali.compose.sign.SignatureBounds.bottom"]},{"name":"val bottomRight: Offset","description":"com.niyajali.compose.sign.SignatureBounds.bottomRight","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/bottom-right.html","searchKeys":["bottomRight","val bottomRight: Offset","com.niyajali.compose.sign.SignatureBounds.bottomRight"]},{"name":"val bounds: SignatureBounds?","description":"com.niyajali.compose.sign.SignatureMetadata.bounds","location":"compose-signature/com.niyajali.compose.sign/-signature-metadata/bounds.html","searchKeys":["bounds","val bounds: SignatureBounds?","com.niyajali.compose.sign.SignatureMetadata.bounds"]},{"name":"val center: Offset","description":"com.niyajali.compose.sign.SignatureBounds.center","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/center.html","searchKeys":["center","val center: Offset","com.niyajali.compose.sign.SignatureBounds.center"]},{"name":"val color: Color","description":"com.niyajali.compose.sign.SignaturePath.color","location":"compose-signature/com.niyajali.compose.sign/-signature-path/color.html","searchKeys":["color","val color: Color","com.niyajali.compose.sign.SignaturePath.color"]},{"name":"val complexity: Int","description":"com.niyajali.compose.sign.SignatureMetadata.complexity","location":"compose-signature/com.niyajali.compose.sign/-signature-metadata/complexity.html","searchKeys":["complexity","val complexity: Int","com.niyajali.compose.sign.SignatureMetadata.complexity"]},{"name":"val confirmDestructive: Boolean = true","description":"com.niyajali.compose.sign.SignatureActionConfig.confirmDestructive","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/confirm-destructive.html","searchKeys":["confirmDestructive","val confirmDestructive: Boolean = true","com.niyajali.compose.sign.SignatureActionConfig.confirmDestructive"]},{"name":"val cornerShape: CornerBasedShape","description":"com.niyajali.compose.sign.SignatureConfig.cornerShape","location":"compose-signature/com.niyajali.compose.sign/-signature-config/corner-shape.html","searchKeys":["cornerShape","val cornerShape: CornerBasedShape","com.niyajali.compose.sign.SignatureConfig.cornerShape"]},{"name":"val cropToBounds: Boolean = false","description":"com.niyajali.compose.sign.SignatureExportConfig.cropToBounds","location":"compose-signature/com.niyajali.compose.sign/-signature-export-config/crop-to-bounds.html","searchKeys":["cropToBounds","val cropToBounds: Boolean = false","com.niyajali.compose.sign.SignatureExportConfig.cropToBounds"]},{"name":"val customLabels: Map<SignatureAction, String>","description":"com.niyajali.compose.sign.SignatureActionConfig.customLabels","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/custom-labels.html","searchKeys":["customLabels","val customLabels: Map<SignatureAction, String>","com.niyajali.compose.sign.SignatureActionConfig.customLabels"]},{"name":"val enableSmoothDrawing: Boolean = true","description":"com.niyajali.compose.sign.SignatureConfig.enableSmoothDrawing","location":"compose-signature/com.niyajali.compose.sign/-signature-config/enable-smooth-drawing.html","searchKeys":["enableSmoothDrawing","val enableSmoothDrawing: Boolean = true","com.niyajali.compose.sign.SignatureConfig.enableSmoothDrawing"]},{"name":"val end: Offset","description":"com.niyajali.compose.sign.SignaturePath.end","location":"compose-signature/com.niyajali.compose.sign/-signature-path/end.html","searchKeys":["end","val end: Offset","com.niyajali.compose.sign.SignaturePath.end"]},{"name":"val entries: EnumEntries<SignatureAction>","description":"com.niyajali.compose.sign.SignatureAction.entries","location":"compose-signature/com.niyajali.compose.sign/-signature-action/entries.html","searchKeys":["entries","val entries: EnumEntries<SignatureAction>","com.niyajali.compose.sign.SignatureAction.entries"]},{"name":"val entries: EnumEntries<SignatureExportFormat>","description":"com.niyajali.compose.sign.SignatureExportFormat.entries","location":"compose-signature/com.niyajali.compose.sign/-signature-export-format/entries.html","searchKeys":["entries","val entries: EnumEntries<SignatureExportFormat>","com.niyajali.compose.sign.SignatureExportFormat.entries"]},{"name":"val entries: EnumEntries<SignatureInputState>","description":"com.niyajali.compose.sign.SignatureInputState.entries","location":"compose-signature/com.niyajali.compose.sign/-signature-input-state/entries.html","searchKeys":["entries","val entries: EnumEntries<SignatureInputState>","com.niyajali.compose.sign.SignatureInputState.entries"]},{"name":"val format: SignatureExportFormat","description":"com.niyajali.compose.sign.SignatureExportConfig.format","location":"compose-signature/com.niyajali.compose.sign/-signature-export-config/format.html","searchKeys":["format","val format: SignatureExportFormat","com.niyajali.compose.sign.SignatureExportConfig.format"]},{"name":"val gridColor: Color","description":"com.niyajali.compose.sign.SignatureConfig.gridColor","location":"compose-signature/com.niyajali.compose.sign/-signature-config/grid-color.html","searchKeys":["gridColor","val gridColor: Color","com.niyajali.compose.sign.SignatureConfig.gridColor"]},{"name":"val gridSpacing: Dp","description":"com.niyajali.compose.sign.SignatureConfig.gridSpacing","location":"compose-signature/com.niyajali.compose.sign/-signature-config/grid-spacing.html","searchKeys":["gridSpacing","val gridSpacing: Dp","com.niyajali.compose.sign.SignatureConfig.gridSpacing"]},{"name":"val height: Float","description":"com.niyajali.compose.sign.SignatureBounds.height","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/height.html","searchKeys":["height","val height: Float","com.niyajali.compose.sign.SignatureBounds.height"]},{"name":"val height: Int = 400","description":"com.niyajali.compose.sign.SignatureExportConfig.height","location":"compose-signature/com.niyajali.compose.sign/-signature-export-config/height.html","searchKeys":["height","val height: Int = 400","com.niyajali.compose.sign.SignatureExportConfig.height"]},{"name":"val includeBorder: Boolean = false","description":"com.niyajali.compose.sign.SignatureExportConfig.includeBorder","location":"compose-signature/com.niyajali.compose.sign/-signature-export-config/include-border.html","searchKeys":["includeBorder","val includeBorder: Boolean = false","com.niyajali.compose.sign.SignatureExportConfig.includeBorder"]},{"name":"val isFullScreen: Boolean = false","description":"com.niyajali.compose.sign.SignatureConfig.isFullScreen","location":"compose-signature/com.niyajali.compose.sign/-signature-config/is-full-screen.html","searchKeys":["isFullScreen","val isFullScreen: Boolean = false","com.niyajali.compose.sign.SignatureConfig.isFullScreen"]},{"name":"val left: Float","description":"com.niyajali.compose.sign.SignatureBounds.left","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/left.html","searchKeys":["left","val left: Float","com.niyajali.compose.sign.SignatureBounds.left"]},{"name":"val maxHeight: Dp","description":"com.niyajali.compose.sign.SignatureConfig.maxHeight","location":"compose-signature/com.niyajali.compose.sign/-signature-config/max-height.html","searchKeys":["maxHeight","val maxHeight: Dp","com.niyajali.compose.sign.SignatureConfig.maxHeight"]},{"name":"val message: String? = null","description":"com.niyajali.compose.sign.SignatureActionResult.message","location":"compose-signature/com.niyajali.compose.sign/-signature-action-result/message.html","searchKeys":["message","val message: String? = null","com.niyajali.compose.sign.SignatureActionResult.message"]},{"name":"val minHeight: Dp","description":"com.niyajali.compose.sign.SignatureConfig.minHeight","location":"compose-signature/com.niyajali.compose.sign/-signature-config/min-height.html","searchKeys":["minHeight","val minHeight: Dp","com.niyajali.compose.sign.SignatureConfig.minHeight"]},{"name":"val pathCount: Int","description":"com.niyajali.compose.sign.SignatureMetadata.pathCount","location":"compose-signature/com.niyajali.compose.sign/-signature-metadata/path-count.html","searchKeys":["pathCount","val pathCount: Int","com.niyajali.compose.sign.SignatureMetadata.pathCount"]},{"name":"val quality: Int = 90","description":"com.niyajali.compose.sign.SignatureExportConfig.quality","location":"compose-signature/com.niyajali.compose.sign/-signature-export-config/quality.html","searchKeys":["quality","val quality: Int = 90","com.niyajali.compose.sign.SignatureExportConfig.quality"]},{"name":"val right: Float","description":"com.niyajali.compose.sign.SignatureBounds.right","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/right.html","searchKeys":["right","val right: Float","com.niyajali.compose.sign.SignatureBounds.right"]},{"name":"val showActions: Boolean = false","description":"com.niyajali.compose.sign.SignatureConfig.showActions","location":"compose-signature/com.niyajali.compose.sign/-signature-config/show-actions.html","searchKeys":["showActions","val showActions: Boolean = false","com.niyajali.compose.sign.SignatureConfig.showActions"]},{"name":"val showClear: Boolean = true","description":"com.niyajali.compose.sign.SignatureActionConfig.showClear","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/show-clear.html","searchKeys":["showClear","val showClear: Boolean = true","com.niyajali.compose.sign.SignatureActionConfig.showClear"]},{"name":"val showGrid: Boolean = false","description":"com.niyajali.compose.sign.SignatureConfig.showGrid","location":"compose-signature/com.niyajali.compose.sign/-signature-config/show-grid.html","searchKeys":["showGrid","val showGrid: Boolean = false","com.niyajali.compose.sign.SignatureConfig.showGrid"]},{"name":"val showRedo: Boolean = true","description":"com.niyajali.compose.sign.SignatureActionConfig.showRedo","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/show-redo.html","searchKeys":["showRedo","val showRedo: Boolean = true","com.niyajali.compose.sign.SignatureActionConfig.showRedo"]},{"name":"val showSave: Boolean = true","description":"com.niyajali.compose.sign.SignatureActionConfig.showSave","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/show-save.html","searchKeys":["showSave","val showSave: Boolean = true","com.niyajali.compose.sign.SignatureActionConfig.showSave"]},{"name":"val showUndo: Boolean = true","description":"com.niyajali.compose.sign.SignatureActionConfig.showUndo","location":"compose-signature/com.niyajali.compose.sign/-signature-action-config/show-undo.html","searchKeys":["showUndo","val showUndo: Boolean = true","com.niyajali.compose.sign.SignatureActionConfig.showUndo"]},{"name":"val start: Offset","description":"com.niyajali.compose.sign.SignaturePath.start","location":"compose-signature/com.niyajali.compose.sign/-signature-path/start.html","searchKeys":["start","val start: Offset","com.niyajali.compose.sign.SignaturePath.start"]},{"name":"val strokeColor: Color","description":"com.niyajali.compose.sign.SignatureConfig.strokeColor","location":"compose-signature/com.niyajali.compose.sign/-signature-config/stroke-color.html","searchKeys":["strokeColor","val strokeColor: Color","com.niyajali.compose.sign.SignatureConfig.strokeColor"]},{"name":"val strokeWidth: Dp","description":"com.niyajali.compose.sign.SignatureConfig.strokeWidth","location":"compose-signature/com.niyajali.compose.sign/-signature-config/stroke-width.html","searchKeys":["strokeWidth","val strokeWidth: Dp","com.niyajali.compose.sign.SignatureConfig.strokeWidth"]},{"name":"val strokeWidth: Float = 5.0f","description":"com.niyajali.compose.sign.SignaturePath.strokeWidth","location":"compose-signature/com.niyajali.compose.sign/-signature-path/stroke-width.html","searchKeys":["strokeWidth","val strokeWidth: Float = 5.0f","com.niyajali.compose.sign.SignaturePath.strokeWidth"]},{"name":"val success: Boolean","description":"com.niyajali.compose.sign.SignatureActionResult.success","location":"compose-signature/com.niyajali.compose.sign/-signature-action-result/success.html","searchKeys":["success","val success: Boolean","com.niyajali.compose.sign.SignatureActionResult.success"]},{"name":"val timestamp: Long","description":"com.niyajali.compose.sign.SignatureMetadata.timestamp","location":"compose-signature/com.niyajali.compose.sign/-signature-metadata/timestamp.html","searchKeys":["timestamp","val timestamp: Long","com.niyajali.compose.sign.SignatureMetadata.timestamp"]},{"name":"val top: Float","description":"com.niyajali.compose.sign.SignatureBounds.top","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/top.html","searchKeys":["top","val top: Float","com.niyajali.compose.sign.SignatureBounds.top"]},{"name":"val topLeft: Offset","description":"com.niyajali.compose.sign.SignatureBounds.topLeft","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/top-left.html","searchKeys":["topLeft","val topLeft: Offset","com.niyajali.compose.sign.SignatureBounds.topLeft"]},{"name":"val totalLength: Float","description":"com.niyajali.compose.sign.SignatureMetadata.totalLength","location":"compose-signature/com.niyajali.compose.sign/-signature-metadata/total-length.html","searchKeys":["totalLength","val totalLength: Float","com.niyajali.compose.sign.SignatureMetadata.totalLength"]},{"name":"val width: Float","description":"com.niyajali.compose.sign.SignatureBounds.width","location":"compose-signature/com.niyajali.compose.sign/-signature-bounds/width.html","searchKeys":["width","val width: Float","com.niyajali.compose.sign.SignatureBounds.width"]},{"name":"val width: Int = 800","description":"com.niyajali.compose.sign.SignatureExportConfig.width","location":"compose-signature/com.niyajali.compose.sign/-signature-export-config/width.html","searchKeys":["width","val width: Int = 800","com.niyajali.compose.sign.SignatureExportConfig.width"]}]