// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, wasmJs]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.github.niyajali:compose-signature>
final enum class com.niyajali.compose.sign/SignatureAction : kotlin/Enum<com.niyajali.compose.sign/SignatureAction> { // com.niyajali.compose.sign/SignatureAction|null[0]
    enum entry CLEAR // com.niyajali.compose.sign/SignatureAction.CLEAR|null[0]
    enum entry REDO // com.niyajali.compose.sign/SignatureAction.REDO|null[0]
    enum entry SAVE // com.niyajali.compose.sign/SignatureAction.SAVE|null[0]
    enum entry UNDO // com.niyajali.compose.sign/SignatureAction.UNDO|null[0]

    final val entries // com.niyajali.compose.sign/SignatureAction.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.niyajali.compose.sign/SignatureAction> // com.niyajali.compose.sign/SignatureAction.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun getDescription(): kotlin/String // com.niyajali.compose.sign/SignatureAction.getDescription|getDescription(){}[0]
    final fun getDisplayName(): kotlin/String // com.niyajali.compose.sign/SignatureAction.getDisplayName|getDisplayName(){}[0]
    final fun isDestructive(): kotlin/Boolean // com.niyajali.compose.sign/SignatureAction.isDestructive|isDestructive(){}[0]
    final fun requiresConfirmation(): kotlin/Boolean // com.niyajali.compose.sign/SignatureAction.requiresConfirmation|requiresConfirmation(){}[0]
    final fun valueOf(kotlin/String): com.niyajali.compose.sign/SignatureAction // com.niyajali.compose.sign/SignatureAction.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.niyajali.compose.sign/SignatureAction> // com.niyajali.compose.sign/SignatureAction.values|values#static(){}[0]
}

final enum class com.niyajali.compose.sign/SignatureExportFormat : kotlin/Enum<com.niyajali.compose.sign/SignatureExportFormat> { // com.niyajali.compose.sign/SignatureExportFormat|null[0]
    enum entry JPEG // com.niyajali.compose.sign/SignatureExportFormat.JPEG|null[0]
    enum entry PDF // com.niyajali.compose.sign/SignatureExportFormat.PDF|null[0]
    enum entry PNG // com.niyajali.compose.sign/SignatureExportFormat.PNG|null[0]
    enum entry SVG // com.niyajali.compose.sign/SignatureExportFormat.SVG|null[0]

    final val entries // com.niyajali.compose.sign/SignatureExportFormat.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.niyajali.compose.sign/SignatureExportFormat> // com.niyajali.compose.sign/SignatureExportFormat.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): com.niyajali.compose.sign/SignatureExportFormat // com.niyajali.compose.sign/SignatureExportFormat.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.niyajali.compose.sign/SignatureExportFormat> // com.niyajali.compose.sign/SignatureExportFormat.values|values#static(){}[0]
}

final enum class com.niyajali.compose.sign/SignatureInputState : kotlin/Enum<com.niyajali.compose.sign/SignatureInputState> { // com.niyajali.compose.sign/SignatureInputState|null[0]
    enum entry COMPLETED // com.niyajali.compose.sign/SignatureInputState.COMPLETED|null[0]
    enum entry DRAWING // com.niyajali.compose.sign/SignatureInputState.DRAWING|null[0]
    enum entry IDLE // com.niyajali.compose.sign/SignatureInputState.IDLE|null[0]

    final val entries // com.niyajali.compose.sign/SignatureInputState.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.niyajali.compose.sign/SignatureInputState> // com.niyajali.compose.sign/SignatureInputState.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): com.niyajali.compose.sign/SignatureInputState // com.niyajali.compose.sign/SignatureInputState.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.niyajali.compose.sign/SignatureInputState> // com.niyajali.compose.sign/SignatureInputState.values|values#static(){}[0]
}

abstract interface com.niyajali.compose.sign/ISignatureState { // com.niyajali.compose.sign/ISignatureState|null[0]
    abstract val canRedo // com.niyajali.compose.sign/ISignatureState.canRedo|{}canRedo[0]
        abstract fun <get-canRedo>(): kotlin/Boolean // com.niyajali.compose.sign/ISignatureState.canRedo.<get-canRedo>|<get-canRedo>(){}[0]
    abstract val canUndo // com.niyajali.compose.sign/ISignatureState.canUndo|{}canUndo[0]
        abstract fun <get-canUndo>(): kotlin/Boolean // com.niyajali.compose.sign/ISignatureState.canUndo.<get-canUndo>|<get-canUndo>(){}[0]
    abstract val inputState // com.niyajali.compose.sign/ISignatureState.inputState|{}inputState[0]
        abstract fun <get-inputState>(): com.niyajali.compose.sign/SignatureInputState // com.niyajali.compose.sign/ISignatureState.inputState.<get-inputState>|<get-inputState>(){}[0]
    abstract val paths // com.niyajali.compose.sign/ISignatureState.paths|{}paths[0]
        abstract fun <get-paths>(): kotlin.collections/List<com.niyajali.compose.sign/SignaturePath> // com.niyajali.compose.sign/ISignatureState.paths.<get-paths>|<get-paths>(){}[0]
    abstract val signature // com.niyajali.compose.sign/ISignatureState.signature|{}signature[0]
        abstract fun <get-signature>(): androidx.compose.ui.graphics/ImageBitmap? // com.niyajali.compose.sign/ISignatureState.signature.<get-signature>|<get-signature>(){}[0]

    abstract fun addPath(com.niyajali.compose.sign/SignaturePath) // com.niyajali.compose.sign/ISignatureState.addPath|addPath(com.niyajali.compose.sign.SignaturePath){}[0]
    abstract fun clear() // com.niyajali.compose.sign/ISignatureState.clear|clear(){}[0]
    abstract fun redo() // com.niyajali.compose.sign/ISignatureState.redo|redo(){}[0]
    abstract fun undo() // com.niyajali.compose.sign/ISignatureState.undo|undo(){}[0]
    abstract fun updateSignature(androidx.compose.ui.graphics/ImageBitmap) // com.niyajali.compose.sign/ISignatureState.updateSignature|updateSignature(androidx.compose.ui.graphics.ImageBitmap){}[0]
}

abstract interface com.niyajali.compose.sign/SignatureActionHandler { // com.niyajali.compose.sign/SignatureActionHandler|null[0]
    abstract fun canExecuteAction(com.niyajali.compose.sign/SignatureAction, com.niyajali.compose.sign/SignatureState): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionHandler.canExecuteAction|canExecuteAction(com.niyajali.compose.sign.SignatureAction;com.niyajali.compose.sign.SignatureState){}[0]
    abstract fun executeAction(com.niyajali.compose.sign/SignatureAction, com.niyajali.compose.sign/SignatureState): com.niyajali.compose.sign/SignatureActionResult // com.niyajali.compose.sign/SignatureActionHandler.executeAction|executeAction(com.niyajali.compose.sign.SignatureAction;com.niyajali.compose.sign.SignatureState){}[0]
}

final class com.niyajali.compose.sign/DefaultSignatureActionHandler : com.niyajali.compose.sign/SignatureActionHandler { // com.niyajali.compose.sign/DefaultSignatureActionHandler|null[0]
    constructor <init>() // com.niyajali.compose.sign/DefaultSignatureActionHandler.<init>|<init>(){}[0]

    final fun canExecuteAction(com.niyajali.compose.sign/SignatureAction, com.niyajali.compose.sign/SignatureState): kotlin/Boolean // com.niyajali.compose.sign/DefaultSignatureActionHandler.canExecuteAction|canExecuteAction(com.niyajali.compose.sign.SignatureAction;com.niyajali.compose.sign.SignatureState){}[0]
    final fun executeAction(com.niyajali.compose.sign/SignatureAction, com.niyajali.compose.sign/SignatureState): com.niyajali.compose.sign/SignatureActionResult // com.niyajali.compose.sign/DefaultSignatureActionHandler.executeAction|executeAction(com.niyajali.compose.sign.SignatureAction;com.niyajali.compose.sign.SignatureState){}[0]
}

final class com.niyajali.compose.sign/SignatureActionConfig { // com.niyajali.compose.sign/SignatureActionConfig|null[0]
    constructor <init>(kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin.collections/Map<com.niyajali.compose.sign/SignatureAction, kotlin/String> = ...) // com.niyajali.compose.sign/SignatureActionConfig.<init>|<init>(kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.collections.Map<com.niyajali.compose.sign.SignatureAction,kotlin.String>){}[0]

    final val confirmDestructive // com.niyajali.compose.sign/SignatureActionConfig.confirmDestructive|{}confirmDestructive[0]
        final fun <get-confirmDestructive>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionConfig.confirmDestructive.<get-confirmDestructive>|<get-confirmDestructive>(){}[0]
    final val customLabels // com.niyajali.compose.sign/SignatureActionConfig.customLabels|{}customLabels[0]
        final fun <get-customLabels>(): kotlin.collections/Map<com.niyajali.compose.sign/SignatureAction, kotlin/String> // com.niyajali.compose.sign/SignatureActionConfig.customLabels.<get-customLabels>|<get-customLabels>(){}[0]
    final val showClear // com.niyajali.compose.sign/SignatureActionConfig.showClear|{}showClear[0]
        final fun <get-showClear>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionConfig.showClear.<get-showClear>|<get-showClear>(){}[0]
    final val showRedo // com.niyajali.compose.sign/SignatureActionConfig.showRedo|{}showRedo[0]
        final fun <get-showRedo>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionConfig.showRedo.<get-showRedo>|<get-showRedo>(){}[0]
    final val showSave // com.niyajali.compose.sign/SignatureActionConfig.showSave|{}showSave[0]
        final fun <get-showSave>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionConfig.showSave.<get-showSave>|<get-showSave>(){}[0]
    final val showUndo // com.niyajali.compose.sign/SignatureActionConfig.showUndo|{}showUndo[0]
        final fun <get-showUndo>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionConfig.showUndo.<get-showUndo>|<get-showUndo>(){}[0]

    final fun component1(): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionConfig.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionConfig.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionConfig.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionConfig.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionConfig.component5|component5(){}[0]
    final fun component6(): kotlin.collections/Map<com.niyajali.compose.sign/SignatureAction, kotlin/String> // com.niyajali.compose.sign/SignatureActionConfig.component6|component6(){}[0]
    final fun copy(kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin.collections/Map<com.niyajali.compose.sign/SignatureAction, kotlin/String> = ...): com.niyajali.compose.sign/SignatureActionConfig // com.niyajali.compose.sign/SignatureActionConfig.copy|copy(kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.collections.Map<com.niyajali.compose.sign.SignatureAction,kotlin.String>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionConfig.equals|equals(kotlin.Any?){}[0]
    final fun getLabelForAction(com.niyajali.compose.sign/SignatureAction): kotlin/String // com.niyajali.compose.sign/SignatureActionConfig.getLabelForAction|getLabelForAction(com.niyajali.compose.sign.SignatureAction){}[0]
    final fun getVisibleActions(): kotlin.collections/List<com.niyajali.compose.sign/SignatureAction> // com.niyajali.compose.sign/SignatureActionConfig.getVisibleActions|getVisibleActions(){}[0]
    final fun hashCode(): kotlin/Int // com.niyajali.compose.sign/SignatureActionConfig.hashCode|hashCode(){}[0]
    final fun shouldShowAction(com.niyajali.compose.sign/SignatureAction): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionConfig.shouldShowAction|shouldShowAction(com.niyajali.compose.sign.SignatureAction){}[0]
    final fun toString(): kotlin/String // com.niyajali.compose.sign/SignatureActionConfig.toString|toString(){}[0]

    final object Companion { // com.niyajali.compose.sign/SignatureActionConfig.Companion|null[0]
        final val Complete // com.niyajali.compose.sign/SignatureActionConfig.Companion.Complete|{}Complete[0]
            final fun <get-Complete>(): com.niyajali.compose.sign/SignatureActionConfig // com.niyajali.compose.sign/SignatureActionConfig.Companion.Complete.<get-Complete>|<get-Complete>(){}[0]
        final val EditOnly // com.niyajali.compose.sign/SignatureActionConfig.Companion.EditOnly|{}EditOnly[0]
            final fun <get-EditOnly>(): com.niyajali.compose.sign/SignatureActionConfig // com.niyajali.compose.sign/SignatureActionConfig.Companion.EditOnly.<get-EditOnly>|<get-EditOnly>(){}[0]
        final val Essential // com.niyajali.compose.sign/SignatureActionConfig.Companion.Essential|{}Essential[0]
            final fun <get-Essential>(): com.niyajali.compose.sign/SignatureActionConfig // com.niyajali.compose.sign/SignatureActionConfig.Companion.Essential.<get-Essential>|<get-Essential>(){}[0]
        final val ReadOnly // com.niyajali.compose.sign/SignatureActionConfig.Companion.ReadOnly|{}ReadOnly[0]
            final fun <get-ReadOnly>(): com.niyajali.compose.sign/SignatureActionConfig // com.niyajali.compose.sign/SignatureActionConfig.Companion.ReadOnly.<get-ReadOnly>|<get-ReadOnly>(){}[0]
    }
}

final class com.niyajali.compose.sign/SignatureActionResult { // com.niyajali.compose.sign/SignatureActionResult|null[0]
    constructor <init>(kotlin/Boolean, kotlin/String? = ..., com.niyajali.compose.sign/SignatureAction) // com.niyajali.compose.sign/SignatureActionResult.<init>|<init>(kotlin.Boolean;kotlin.String?;com.niyajali.compose.sign.SignatureAction){}[0]

    final val action // com.niyajali.compose.sign/SignatureActionResult.action|{}action[0]
        final fun <get-action>(): com.niyajali.compose.sign/SignatureAction // com.niyajali.compose.sign/SignatureActionResult.action.<get-action>|<get-action>(){}[0]
    final val message // com.niyajali.compose.sign/SignatureActionResult.message|{}message[0]
        final fun <get-message>(): kotlin/String? // com.niyajali.compose.sign/SignatureActionResult.message.<get-message>|<get-message>(){}[0]
    final val success // com.niyajali.compose.sign/SignatureActionResult.success|{}success[0]
        final fun <get-success>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionResult.success.<get-success>|<get-success>(){}[0]

    final fun component1(): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionResult.component1|component1(){}[0]
    final fun component2(): kotlin/String? // com.niyajali.compose.sign/SignatureActionResult.component2|component2(){}[0]
    final fun component3(): com.niyajali.compose.sign/SignatureAction // com.niyajali.compose.sign/SignatureActionResult.component3|component3(){}[0]
    final fun copy(kotlin/Boolean = ..., kotlin/String? = ..., com.niyajali.compose.sign/SignatureAction = ...): com.niyajali.compose.sign/SignatureActionResult // com.niyajali.compose.sign/SignatureActionResult.copy|copy(kotlin.Boolean;kotlin.String?;com.niyajali.compose.sign.SignatureAction){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.niyajali.compose.sign/SignatureActionResult.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.niyajali.compose.sign/SignatureActionResult.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.niyajali.compose.sign/SignatureActionResult.toString|toString(){}[0]

    final object Companion { // com.niyajali.compose.sign/SignatureActionResult.Companion|null[0]
        final fun failure(com.niyajali.compose.sign/SignatureAction, kotlin/String): com.niyajali.compose.sign/SignatureActionResult // com.niyajali.compose.sign/SignatureActionResult.Companion.failure|failure(com.niyajali.compose.sign.SignatureAction;kotlin.String){}[0]
        final fun success(com.niyajali.compose.sign/SignatureAction, kotlin/String? = ...): com.niyajali.compose.sign/SignatureActionResult // com.niyajali.compose.sign/SignatureActionResult.Companion.success|success(com.niyajali.compose.sign.SignatureAction;kotlin.String?){}[0]
    }
}

final class com.niyajali.compose.sign/SignatureBounds { // com.niyajali.compose.sign/SignatureBounds|null[0]
    constructor <init>(kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float) // com.niyajali.compose.sign/SignatureBounds.<init>|<init>(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]

    final val bottom // com.niyajali.compose.sign/SignatureBounds.bottom|{}bottom[0]
        final fun <get-bottom>(): kotlin/Float // com.niyajali.compose.sign/SignatureBounds.bottom.<get-bottom>|<get-bottom>(){}[0]
    final val bottomRight // com.niyajali.compose.sign/SignatureBounds.bottomRight|{}bottomRight[0]
        final fun <get-bottomRight>(): androidx.compose.ui.geometry/Offset // com.niyajali.compose.sign/SignatureBounds.bottomRight.<get-bottomRight>|<get-bottomRight>(){}[0]
    final val center // com.niyajali.compose.sign/SignatureBounds.center|{}center[0]
        final fun <get-center>(): androidx.compose.ui.geometry/Offset // com.niyajali.compose.sign/SignatureBounds.center.<get-center>|<get-center>(){}[0]
    final val height // com.niyajali.compose.sign/SignatureBounds.height|{}height[0]
        final fun <get-height>(): kotlin/Float // com.niyajali.compose.sign/SignatureBounds.height.<get-height>|<get-height>(){}[0]
    final val left // com.niyajali.compose.sign/SignatureBounds.left|{}left[0]
        final fun <get-left>(): kotlin/Float // com.niyajali.compose.sign/SignatureBounds.left.<get-left>|<get-left>(){}[0]
    final val right // com.niyajali.compose.sign/SignatureBounds.right|{}right[0]
        final fun <get-right>(): kotlin/Float // com.niyajali.compose.sign/SignatureBounds.right.<get-right>|<get-right>(){}[0]
    final val top // com.niyajali.compose.sign/SignatureBounds.top|{}top[0]
        final fun <get-top>(): kotlin/Float // com.niyajali.compose.sign/SignatureBounds.top.<get-top>|<get-top>(){}[0]
    final val topLeft // com.niyajali.compose.sign/SignatureBounds.topLeft|{}topLeft[0]
        final fun <get-topLeft>(): androidx.compose.ui.geometry/Offset // com.niyajali.compose.sign/SignatureBounds.topLeft.<get-topLeft>|<get-topLeft>(){}[0]
    final val width // com.niyajali.compose.sign/SignatureBounds.width|{}width[0]
        final fun <get-width>(): kotlin/Float // com.niyajali.compose.sign/SignatureBounds.width.<get-width>|<get-width>(){}[0]

    final fun area(): kotlin/Float // com.niyajali.compose.sign/SignatureBounds.area|area(){}[0]
    final fun component1(): kotlin/Float // com.niyajali.compose.sign/SignatureBounds.component1|component1(){}[0]
    final fun component2(): kotlin/Float // com.niyajali.compose.sign/SignatureBounds.component2|component2(){}[0]
    final fun component3(): kotlin/Float // com.niyajali.compose.sign/SignatureBounds.component3|component3(){}[0]
    final fun component4(): kotlin/Float // com.niyajali.compose.sign/SignatureBounds.component4|component4(){}[0]
    final fun contains(androidx.compose.ui.geometry/Offset): kotlin/Boolean // com.niyajali.compose.sign/SignatureBounds.contains|contains(androidx.compose.ui.geometry.Offset){}[0]
    final fun copy(kotlin/Float = ..., kotlin/Float = ..., kotlin/Float = ..., kotlin/Float = ...): com.niyajali.compose.sign/SignatureBounds // com.niyajali.compose.sign/SignatureBounds.copy|copy(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.niyajali.compose.sign/SignatureBounds.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.niyajali.compose.sign/SignatureBounds.hashCode|hashCode(){}[0]
    final fun isValid(): kotlin/Boolean // com.niyajali.compose.sign/SignatureBounds.isValid|isValid(){}[0]
    final fun toString(): kotlin/String // com.niyajali.compose.sign/SignatureBounds.toString|toString(){}[0]
}

final class com.niyajali.compose.sign/SignatureConfig { // com.niyajali.compose.sign/SignatureConfig|null[0]
    constructor <init>(androidx.compose.ui.graphics/Color = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.graphics/Color = ..., androidx.compose.foundation/BorderStroke? = ..., androidx.compose.foundation.shape/CornerBasedShape = ..., kotlin/Boolean = ..., androidx.compose.ui.graphics/Color = ..., androidx.compose.ui.unit/Dp = ..., kotlin/Boolean = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., kotlin/Boolean = ..., kotlin/Boolean = ...) // com.niyajali.compose.sign/SignatureConfig.<init>|<init>(androidx.compose.ui.graphics.Color;androidx.compose.ui.unit.Dp;androidx.compose.ui.graphics.Color;androidx.compose.foundation.BorderStroke?;androidx.compose.foundation.shape.CornerBasedShape;kotlin.Boolean;androidx.compose.ui.graphics.Color;androidx.compose.ui.unit.Dp;kotlin.Boolean;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;kotlin.Boolean;kotlin.Boolean){}[0]

    final val backgroundColor // com.niyajali.compose.sign/SignatureConfig.backgroundColor|{}backgroundColor[0]
        final fun <get-backgroundColor>(): androidx.compose.ui.graphics/Color // com.niyajali.compose.sign/SignatureConfig.backgroundColor.<get-backgroundColor>|<get-backgroundColor>(){}[0]
    final val borderStroke // com.niyajali.compose.sign/SignatureConfig.borderStroke|{}borderStroke[0]
        final fun <get-borderStroke>(): androidx.compose.foundation/BorderStroke? // com.niyajali.compose.sign/SignatureConfig.borderStroke.<get-borderStroke>|<get-borderStroke>(){}[0]
    final val cornerShape // com.niyajali.compose.sign/SignatureConfig.cornerShape|{}cornerShape[0]
        final fun <get-cornerShape>(): androidx.compose.foundation.shape/CornerBasedShape // com.niyajali.compose.sign/SignatureConfig.cornerShape.<get-cornerShape>|<get-cornerShape>(){}[0]
    final val enableSmoothDrawing // com.niyajali.compose.sign/SignatureConfig.enableSmoothDrawing|{}enableSmoothDrawing[0]
        final fun <get-enableSmoothDrawing>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureConfig.enableSmoothDrawing.<get-enableSmoothDrawing>|<get-enableSmoothDrawing>(){}[0]
    final val gridColor // com.niyajali.compose.sign/SignatureConfig.gridColor|{}gridColor[0]
        final fun <get-gridColor>(): androidx.compose.ui.graphics/Color // com.niyajali.compose.sign/SignatureConfig.gridColor.<get-gridColor>|<get-gridColor>(){}[0]
    final val gridSpacing // com.niyajali.compose.sign/SignatureConfig.gridSpacing|{}gridSpacing[0]
        final fun <get-gridSpacing>(): androidx.compose.ui.unit/Dp // com.niyajali.compose.sign/SignatureConfig.gridSpacing.<get-gridSpacing>|<get-gridSpacing>(){}[0]
    final val isFullScreen // com.niyajali.compose.sign/SignatureConfig.isFullScreen|{}isFullScreen[0]
        final fun <get-isFullScreen>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureConfig.isFullScreen.<get-isFullScreen>|<get-isFullScreen>(){}[0]
    final val maxHeight // com.niyajali.compose.sign/SignatureConfig.maxHeight|{}maxHeight[0]
        final fun <get-maxHeight>(): androidx.compose.ui.unit/Dp // com.niyajali.compose.sign/SignatureConfig.maxHeight.<get-maxHeight>|<get-maxHeight>(){}[0]
    final val minHeight // com.niyajali.compose.sign/SignatureConfig.minHeight|{}minHeight[0]
        final fun <get-minHeight>(): androidx.compose.ui.unit/Dp // com.niyajali.compose.sign/SignatureConfig.minHeight.<get-minHeight>|<get-minHeight>(){}[0]
    final val showActions // com.niyajali.compose.sign/SignatureConfig.showActions|{}showActions[0]
        final fun <get-showActions>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureConfig.showActions.<get-showActions>|<get-showActions>(){}[0]
    final val showGrid // com.niyajali.compose.sign/SignatureConfig.showGrid|{}showGrid[0]
        final fun <get-showGrid>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureConfig.showGrid.<get-showGrid>|<get-showGrid>(){}[0]
    final val strokeColor // com.niyajali.compose.sign/SignatureConfig.strokeColor|{}strokeColor[0]
        final fun <get-strokeColor>(): androidx.compose.ui.graphics/Color // com.niyajali.compose.sign/SignatureConfig.strokeColor.<get-strokeColor>|<get-strokeColor>(){}[0]
    final val strokeWidth // com.niyajali.compose.sign/SignatureConfig.strokeWidth|{}strokeWidth[0]
        final fun <get-strokeWidth>(): androidx.compose.ui.unit/Dp // com.niyajali.compose.sign/SignatureConfig.strokeWidth.<get-strokeWidth>|<get-strokeWidth>(){}[0]

    final fun asFullScreen(kotlin/Boolean = ...): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/SignatureConfig.asFullScreen|asFullScreen(kotlin.Boolean){}[0]
    final fun component1(): androidx.compose.ui.graphics/Color // com.niyajali.compose.sign/SignatureConfig.component1|component1(){}[0]
    final fun component10(): androidx.compose.ui.unit/Dp // com.niyajali.compose.sign/SignatureConfig.component10|component10(){}[0]
    final fun component11(): androidx.compose.ui.unit/Dp // com.niyajali.compose.sign/SignatureConfig.component11|component11(){}[0]
    final fun component12(): kotlin/Boolean // com.niyajali.compose.sign/SignatureConfig.component12|component12(){}[0]
    final fun component13(): kotlin/Boolean // com.niyajali.compose.sign/SignatureConfig.component13|component13(){}[0]
    final fun component2(): androidx.compose.ui.unit/Dp // com.niyajali.compose.sign/SignatureConfig.component2|component2(){}[0]
    final fun component3(): androidx.compose.ui.graphics/Color // com.niyajali.compose.sign/SignatureConfig.component3|component3(){}[0]
    final fun component4(): androidx.compose.foundation/BorderStroke? // com.niyajali.compose.sign/SignatureConfig.component4|component4(){}[0]
    final fun component5(): androidx.compose.foundation.shape/CornerBasedShape // com.niyajali.compose.sign/SignatureConfig.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean // com.niyajali.compose.sign/SignatureConfig.component6|component6(){}[0]
    final fun component7(): androidx.compose.ui.graphics/Color // com.niyajali.compose.sign/SignatureConfig.component7|component7(){}[0]
    final fun component8(): androidx.compose.ui.unit/Dp // com.niyajali.compose.sign/SignatureConfig.component8|component8(){}[0]
    final fun component9(): kotlin/Boolean // com.niyajali.compose.sign/SignatureConfig.component9|component9(){}[0]
    final fun copy(androidx.compose.ui.graphics/Color = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.graphics/Color = ..., androidx.compose.foundation/BorderStroke? = ..., androidx.compose.foundation.shape/CornerBasedShape = ..., kotlin/Boolean = ..., androidx.compose.ui.graphics/Color = ..., androidx.compose.ui.unit/Dp = ..., kotlin/Boolean = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., kotlin/Boolean = ..., kotlin/Boolean = ...): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/SignatureConfig.copy|copy(androidx.compose.ui.graphics.Color;androidx.compose.ui.unit.Dp;androidx.compose.ui.graphics.Color;androidx.compose.foundation.BorderStroke?;androidx.compose.foundation.shape.CornerBasedShape;kotlin.Boolean;androidx.compose.ui.graphics.Color;androidx.compose.ui.unit.Dp;kotlin.Boolean;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;kotlin.Boolean;kotlin.Boolean){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.niyajali.compose.sign/SignatureConfig.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.niyajali.compose.sign/SignatureConfig.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.niyajali.compose.sign/SignatureConfig.toString|toString(){}[0]
    final fun withAppearance(androidx.compose.ui.graphics/Color = ..., androidx.compose.foundation/BorderStroke? = ..., androidx.compose.foundation.shape/CornerBasedShape = ...): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/SignatureConfig.withAppearance|withAppearance(androidx.compose.ui.graphics.Color;androidx.compose.foundation.BorderStroke?;androidx.compose.foundation.shape.CornerBasedShape){}[0]
    final fun withGrid(kotlin/Boolean = ..., androidx.compose.ui.graphics/Color = ..., androidx.compose.ui.unit/Dp = ...): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/SignatureConfig.withGrid|withGrid(kotlin.Boolean;androidx.compose.ui.graphics.Color;androidx.compose.ui.unit.Dp){}[0]
    final fun withStroke(androidx.compose.ui.graphics/Color = ..., androidx.compose.ui.unit/Dp = ...): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/SignatureConfig.withStroke|withStroke(androidx.compose.ui.graphics.Color;androidx.compose.ui.unit.Dp){}[0]

    final object Companion { // com.niyajali.compose.sign/SignatureConfig.Companion|null[0]
        final val Creative // com.niyajali.compose.sign/SignatureConfig.Companion.Creative|{}Creative[0]
            final fun <get-Creative>(): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/SignatureConfig.Companion.Creative.<get-Creative>|<get-Creative>(){}[0]
        final val Default // com.niyajali.compose.sign/SignatureConfig.Companion.Default|{}Default[0]
            final fun <get-Default>(): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/SignatureConfig.Companion.Default.<get-Default>|<get-Default>(){}[0]
        final val FormIntegration // com.niyajali.compose.sign/SignatureConfig.Companion.FormIntegration|{}FormIntegration[0]
            final fun <get-FormIntegration>(): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/SignatureConfig.Companion.FormIntegration.<get-FormIntegration>|<get-FormIntegration>(){}[0]
        final val Fullscreen // com.niyajali.compose.sign/SignatureConfig.Companion.Fullscreen|{}Fullscreen[0]
            final fun <get-Fullscreen>(): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/SignatureConfig.Companion.Fullscreen.<get-Fullscreen>|<get-Fullscreen>(){}[0]
        final val Professional // com.niyajali.compose.sign/SignatureConfig.Companion.Professional|{}Professional[0]
            final fun <get-Professional>(): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/SignatureConfig.Companion.Professional.<get-Professional>|<get-Professional>(){}[0]
        final val ThickStroke // com.niyajali.compose.sign/SignatureConfig.Companion.ThickStroke|{}ThickStroke[0]
            final fun <get-ThickStroke>(): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/SignatureConfig.Companion.ThickStroke.<get-ThickStroke>|<get-ThickStroke>(){}[0]
        final val WithGrid // com.niyajali.compose.sign/SignatureConfig.Companion.WithGrid|{}WithGrid[0]
            final fun <get-WithGrid>(): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/SignatureConfig.Companion.WithGrid.<get-WithGrid>|<get-WithGrid>(){}[0]
    }
}

final class com.niyajali.compose.sign/SignatureExportConfig { // com.niyajali.compose.sign/SignatureExportConfig|null[0]
    constructor <init>(com.niyajali.compose.sign/SignatureExportFormat = ..., kotlin/Int = ..., kotlin/Int = ..., androidx.compose.ui.graphics/Color = ..., kotlin/Int = ..., kotlin/Boolean = ..., kotlin/Boolean = ...) // com.niyajali.compose.sign/SignatureExportConfig.<init>|<init>(com.niyajali.compose.sign.SignatureExportFormat;kotlin.Int;kotlin.Int;androidx.compose.ui.graphics.Color;kotlin.Int;kotlin.Boolean;kotlin.Boolean){}[0]

    final val backgroundColor // com.niyajali.compose.sign/SignatureExportConfig.backgroundColor|{}backgroundColor[0]
        final fun <get-backgroundColor>(): androidx.compose.ui.graphics/Color // com.niyajali.compose.sign/SignatureExportConfig.backgroundColor.<get-backgroundColor>|<get-backgroundColor>(){}[0]
    final val cropToBounds // com.niyajali.compose.sign/SignatureExportConfig.cropToBounds|{}cropToBounds[0]
        final fun <get-cropToBounds>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureExportConfig.cropToBounds.<get-cropToBounds>|<get-cropToBounds>(){}[0]
    final val format // com.niyajali.compose.sign/SignatureExportConfig.format|{}format[0]
        final fun <get-format>(): com.niyajali.compose.sign/SignatureExportFormat // com.niyajali.compose.sign/SignatureExportConfig.format.<get-format>|<get-format>(){}[0]
    final val height // com.niyajali.compose.sign/SignatureExportConfig.height|{}height[0]
        final fun <get-height>(): kotlin/Int // com.niyajali.compose.sign/SignatureExportConfig.height.<get-height>|<get-height>(){}[0]
    final val includeBorder // com.niyajali.compose.sign/SignatureExportConfig.includeBorder|{}includeBorder[0]
        final fun <get-includeBorder>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureExportConfig.includeBorder.<get-includeBorder>|<get-includeBorder>(){}[0]
    final val quality // com.niyajali.compose.sign/SignatureExportConfig.quality|{}quality[0]
        final fun <get-quality>(): kotlin/Int // com.niyajali.compose.sign/SignatureExportConfig.quality.<get-quality>|<get-quality>(){}[0]
    final val width // com.niyajali.compose.sign/SignatureExportConfig.width|{}width[0]
        final fun <get-width>(): kotlin/Int // com.niyajali.compose.sign/SignatureExportConfig.width.<get-width>|<get-width>(){}[0]

    final fun component1(): com.niyajali.compose.sign/SignatureExportFormat // com.niyajali.compose.sign/SignatureExportConfig.component1|component1(){}[0]
    final fun component2(): kotlin/Int // com.niyajali.compose.sign/SignatureExportConfig.component2|component2(){}[0]
    final fun component3(): kotlin/Int // com.niyajali.compose.sign/SignatureExportConfig.component3|component3(){}[0]
    final fun component4(): androidx.compose.ui.graphics/Color // com.niyajali.compose.sign/SignatureExportConfig.component4|component4(){}[0]
    final fun component5(): kotlin/Int // com.niyajali.compose.sign/SignatureExportConfig.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean // com.niyajali.compose.sign/SignatureExportConfig.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean // com.niyajali.compose.sign/SignatureExportConfig.component7|component7(){}[0]
    final fun copy(com.niyajali.compose.sign/SignatureExportFormat = ..., kotlin/Int = ..., kotlin/Int = ..., androidx.compose.ui.graphics/Color = ..., kotlin/Int = ..., kotlin/Boolean = ..., kotlin/Boolean = ...): com.niyajali.compose.sign/SignatureExportConfig // com.niyajali.compose.sign/SignatureExportConfig.copy|copy(com.niyajali.compose.sign.SignatureExportFormat;kotlin.Int;kotlin.Int;androidx.compose.ui.graphics.Color;kotlin.Int;kotlin.Boolean;kotlin.Boolean){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.niyajali.compose.sign/SignatureExportConfig.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.niyajali.compose.sign/SignatureExportConfig.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.niyajali.compose.sign/SignatureExportConfig.toString|toString(){}[0]
}

final class com.niyajali.compose.sign/SignatureMetadata { // com.niyajali.compose.sign/SignatureMetadata|null[0]
    constructor <init>(kotlin/Int, kotlin/Float, com.niyajali.compose.sign/SignatureBounds?, kotlin/Int, kotlin/Long = ...) // com.niyajali.compose.sign/SignatureMetadata.<init>|<init>(kotlin.Int;kotlin.Float;com.niyajali.compose.sign.SignatureBounds?;kotlin.Int;kotlin.Long){}[0]

    final val bounds // com.niyajali.compose.sign/SignatureMetadata.bounds|{}bounds[0]
        final fun <get-bounds>(): com.niyajali.compose.sign/SignatureBounds? // com.niyajali.compose.sign/SignatureMetadata.bounds.<get-bounds>|<get-bounds>(){}[0]
    final val complexity // com.niyajali.compose.sign/SignatureMetadata.complexity|{}complexity[0]
        final fun <get-complexity>(): kotlin/Int // com.niyajali.compose.sign/SignatureMetadata.complexity.<get-complexity>|<get-complexity>(){}[0]
    final val pathCount // com.niyajali.compose.sign/SignatureMetadata.pathCount|{}pathCount[0]
        final fun <get-pathCount>(): kotlin/Int // com.niyajali.compose.sign/SignatureMetadata.pathCount.<get-pathCount>|<get-pathCount>(){}[0]
    final val timestamp // com.niyajali.compose.sign/SignatureMetadata.timestamp|{}timestamp[0]
        final fun <get-timestamp>(): kotlin/Long // com.niyajali.compose.sign/SignatureMetadata.timestamp.<get-timestamp>|<get-timestamp>(){}[0]
    final val totalLength // com.niyajali.compose.sign/SignatureMetadata.totalLength|{}totalLength[0]
        final fun <get-totalLength>(): kotlin/Float // com.niyajali.compose.sign/SignatureMetadata.totalLength.<get-totalLength>|<get-totalLength>(){}[0]

    final fun complexityDescription(): kotlin/String // com.niyajali.compose.sign/SignatureMetadata.complexityDescription|complexityDescription(){}[0]
    final fun component1(): kotlin/Int // com.niyajali.compose.sign/SignatureMetadata.component1|component1(){}[0]
    final fun component2(): kotlin/Float // com.niyajali.compose.sign/SignatureMetadata.component2|component2(){}[0]
    final fun component3(): com.niyajali.compose.sign/SignatureBounds? // com.niyajali.compose.sign/SignatureMetadata.component3|component3(){}[0]
    final fun component4(): kotlin/Int // com.niyajali.compose.sign/SignatureMetadata.component4|component4(){}[0]
    final fun component5(): kotlin/Long // com.niyajali.compose.sign/SignatureMetadata.component5|component5(){}[0]
    final fun copy(kotlin/Int = ..., kotlin/Float = ..., com.niyajali.compose.sign/SignatureBounds? = ..., kotlin/Int = ..., kotlin/Long = ...): com.niyajali.compose.sign/SignatureMetadata // com.niyajali.compose.sign/SignatureMetadata.copy|copy(kotlin.Int;kotlin.Float;com.niyajali.compose.sign.SignatureBounds?;kotlin.Int;kotlin.Long){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.niyajali.compose.sign/SignatureMetadata.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.niyajali.compose.sign/SignatureMetadata.hashCode|hashCode(){}[0]
    final fun isComplex(): kotlin/Boolean // com.niyajali.compose.sign/SignatureMetadata.isComplex|isComplex(){}[0]
    final fun isSimple(): kotlin/Boolean // com.niyajali.compose.sign/SignatureMetadata.isSimple|isSimple(){}[0]
    final fun toString(): kotlin/String // com.niyajali.compose.sign/SignatureMetadata.toString|toString(){}[0]
}

final class com.niyajali.compose.sign/SignaturePath { // com.niyajali.compose.sign/SignaturePath|null[0]
    constructor <init>(androidx.compose.ui.geometry/Offset, androidx.compose.ui.geometry/Offset, kotlin/Float = ..., androidx.compose.ui.graphics/Color = ...) // com.niyajali.compose.sign/SignaturePath.<init>|<init>(androidx.compose.ui.geometry.Offset;androidx.compose.ui.geometry.Offset;kotlin.Float;androidx.compose.ui.graphics.Color){}[0]

    final val color // com.niyajali.compose.sign/SignaturePath.color|{}color[0]
        final fun <get-color>(): androidx.compose.ui.graphics/Color // com.niyajali.compose.sign/SignaturePath.color.<get-color>|<get-color>(){}[0]
    final val end // com.niyajali.compose.sign/SignaturePath.end|{}end[0]
        final fun <get-end>(): androidx.compose.ui.geometry/Offset // com.niyajali.compose.sign/SignaturePath.end.<get-end>|<get-end>(){}[0]
    final val start // com.niyajali.compose.sign/SignaturePath.start|{}start[0]
        final fun <get-start>(): androidx.compose.ui.geometry/Offset // com.niyajali.compose.sign/SignaturePath.start.<get-start>|<get-start>(){}[0]
    final val strokeWidth // com.niyajali.compose.sign/SignaturePath.strokeWidth|{}strokeWidth[0]
        final fun <get-strokeWidth>(): kotlin/Float // com.niyajali.compose.sign/SignaturePath.strokeWidth.<get-strokeWidth>|<get-strokeWidth>(){}[0]

    final fun component1(): androidx.compose.ui.geometry/Offset // com.niyajali.compose.sign/SignaturePath.component1|component1(){}[0]
    final fun component2(): androidx.compose.ui.geometry/Offset // com.niyajali.compose.sign/SignaturePath.component2|component2(){}[0]
    final fun component3(): kotlin/Float // com.niyajali.compose.sign/SignaturePath.component3|component3(){}[0]
    final fun component4(): androidx.compose.ui.graphics/Color // com.niyajali.compose.sign/SignaturePath.component4|component4(){}[0]
    final fun copy(androidx.compose.ui.geometry/Offset = ..., androidx.compose.ui.geometry/Offset = ..., kotlin/Float = ..., androidx.compose.ui.graphics/Color = ...): com.niyajali.compose.sign/SignaturePath // com.niyajali.compose.sign/SignaturePath.copy|copy(androidx.compose.ui.geometry.Offset;androidx.compose.ui.geometry.Offset;kotlin.Float;androidx.compose.ui.graphics.Color){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.niyajali.compose.sign/SignaturePath.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.niyajali.compose.sign/SignaturePath.hashCode|hashCode(){}[0]
    final fun intersectsWith(com.niyajali.compose.sign/SignaturePath): kotlin/Boolean // com.niyajali.compose.sign/SignaturePath.intersectsWith|intersectsWith(com.niyajali.compose.sign.SignaturePath){}[0]
    final fun length(): kotlin/Float // com.niyajali.compose.sign/SignaturePath.length|length(){}[0]
    final fun midpoint(): androidx.compose.ui.geometry/Offset // com.niyajali.compose.sign/SignaturePath.midpoint|midpoint(){}[0]
    final fun toString(): kotlin/String // com.niyajali.compose.sign/SignaturePath.toString|toString(){}[0]
}

final class com.niyajali.compose.sign/SignatureState : com.niyajali.compose.sign/ISignatureState { // com.niyajali.compose.sign/SignatureState|null[0]
    final val canRedo // com.niyajali.compose.sign/SignatureState.canRedo|{}canRedo[0]
        final fun <get-canRedo>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureState.canRedo.<get-canRedo>|<get-canRedo>(){}[0]
    final val canUndo // com.niyajali.compose.sign/SignatureState.canUndo|{}canUndo[0]
        final fun <get-canUndo>(): kotlin/Boolean // com.niyajali.compose.sign/SignatureState.canUndo.<get-canUndo>|<get-canUndo>(){}[0]
    final val inputState // com.niyajali.compose.sign/SignatureState.inputState|{}inputState[0]
        final fun <get-inputState>(): com.niyajali.compose.sign/SignatureInputState // com.niyajali.compose.sign/SignatureState.inputState.<get-inputState>|<get-inputState>(){}[0]
    final val paths // com.niyajali.compose.sign/SignatureState.paths|{}paths[0]
        final fun <get-paths>(): kotlin.collections/List<com.niyajali.compose.sign/SignaturePath> // com.niyajali.compose.sign/SignatureState.paths.<get-paths>|<get-paths>(){}[0]
    final val signature // com.niyajali.compose.sign/SignatureState.signature|{}signature[0]
        final fun <get-signature>(): androidx.compose.ui.graphics/ImageBitmap? // com.niyajali.compose.sign/SignatureState.signature.<get-signature>|<get-signature>(){}[0]

    final fun addPath(com.niyajali.compose.sign/SignaturePath) // com.niyajali.compose.sign/SignatureState.addPath|addPath(com.niyajali.compose.sign.SignaturePath){}[0]
    final fun clear() // com.niyajali.compose.sign/SignatureState.clear|clear(){}[0]
    final fun redo() // com.niyajali.compose.sign/SignatureState.redo|redo(){}[0]
    final fun undo() // com.niyajali.compose.sign/SignatureState.undo|undo(){}[0]
    final fun updateSignature(androidx.compose.ui.graphics/ImageBitmap) // com.niyajali.compose.sign/SignatureState.updateSignature|updateSignature(androidx.compose.ui.graphics.ImageBitmap){}[0]

    final object Companion { // com.niyajali.compose.sign/SignatureState.Companion|null[0]
        final val Saver // com.niyajali.compose.sign/SignatureState.Companion.Saver|{}Saver[0]
            final fun <get-Saver>(): androidx.compose.runtime.saveable/Saver<com.niyajali.compose.sign/SignatureState, *> // com.niyajali.compose.sign/SignatureState.Companion.Saver.<get-Saver>|<get-Saver>(){}[0]
    }
}

final val com.niyajali.compose.sign/com_niyajali_compose_sign_DefaultSignatureActionHandler$stableprop // com.niyajali.compose.sign/com_niyajali_compose_sign_DefaultSignatureActionHandler$stableprop|#static{}com_niyajali_compose_sign_DefaultSignatureActionHandler$stableprop[0]
final val com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureActionConfig$stableprop // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureActionConfig$stableprop|#static{}com_niyajali_compose_sign_SignatureActionConfig$stableprop[0]
final val com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureActionResult$stableprop // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureActionResult$stableprop|#static{}com_niyajali_compose_sign_SignatureActionResult$stableprop[0]
final val com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureBounds$stableprop // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureBounds$stableprop|#static{}com_niyajali_compose_sign_SignatureBounds$stableprop[0]
final val com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureConfig$stableprop // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureConfig$stableprop|#static{}com_niyajali_compose_sign_SignatureConfig$stableprop[0]
final val com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureExportConfig$stableprop // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureExportConfig$stableprop|#static{}com_niyajali_compose_sign_SignatureExportConfig$stableprop[0]
final val com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureMetadata$stableprop // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureMetadata$stableprop|#static{}com_niyajali_compose_sign_SignatureMetadata$stableprop[0]
final val com.niyajali.compose.sign/com_niyajali_compose_sign_SignaturePath$stableprop // com.niyajali.compose.sign/com_niyajali_compose_sign_SignaturePath$stableprop|#static{}com_niyajali_compose_sign_SignaturePath$stableprop[0]
final val com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureState$stableprop // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureState$stableprop|#static{}com_niyajali_compose_sign_SignatureState$stableprop[0]
final val io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res$stableprop // io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res$stableprop|#static{}io_github_niyajali_compose_signature_generated_resources_Res$stableprop[0]
final val io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_array$stableprop // io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_array$stableprop|#static{}io_github_niyajali_compose_signature_generated_resources_Res_array$stableprop[0]
final val io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_drawable$stableprop // io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_drawable$stableprop|#static{}io_github_niyajali_compose_signature_generated_resources_Res_drawable$stableprop[0]
final val io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_font$stableprop // io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_font$stableprop|#static{}io_github_niyajali_compose_signature_generated_resources_Res_font$stableprop[0]
final val io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_plurals$stableprop // io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_plurals$stableprop|#static{}io_github_niyajali_compose_signature_generated_resources_Res_plurals$stableprop[0]
final val io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_string$stableprop // io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_string$stableprop|#static{}io_github_niyajali_compose_signature_generated_resources_Res_string$stableprop[0]

final fun (androidx.compose.ui.graphics/ImageBitmap).com.niyajali.compose.sign/getAspectRatio(): kotlin/Float // com.niyajali.compose.sign/getAspectRatio|getAspectRatio@androidx.compose.ui.graphics.ImageBitmap(){}[0]
final fun (androidx.compose.ui.graphics/ImageBitmap).com.niyajali.compose.sign/getDimensionDescription(): kotlin/String // com.niyajali.compose.sign/getDimensionDescription|getDimensionDescription@androidx.compose.ui.graphics.ImageBitmap(){}[0]
final fun (androidx.compose.ui.graphics/ImageBitmap).com.niyajali.compose.sign/isLandscape(): kotlin/Boolean // com.niyajali.compose.sign/isLandscape|isLandscape@androidx.compose.ui.graphics.ImageBitmap(){}[0]
final fun (androidx.compose.ui.graphics/ImageBitmap).com.niyajali.compose.sign/isPortrait(): kotlin/Boolean // com.niyajali.compose.sign/isPortrait|isPortrait@androidx.compose.ui.graphics.ImageBitmap(){}[0]
final fun (com.niyajali.compose.sign/SignatureBounds).com.niyajali.compose.sign/getAspectRatio(): kotlin/Float // com.niyajali.compose.sign/getAspectRatio|getAspectRatio@com.niyajali.compose.sign.SignatureBounds(){}[0]
final fun (com.niyajali.compose.sign/SignatureBounds).com.niyajali.compose.sign/isLandscape(): kotlin/Boolean // com.niyajali.compose.sign/isLandscape|isLandscape@com.niyajali.compose.sign.SignatureBounds(){}[0]
final fun (com.niyajali.compose.sign/SignatureBounds).com.niyajali.compose.sign/isPortrait(): kotlin/Boolean // com.niyajali.compose.sign/isPortrait|isPortrait@com.niyajali.compose.sign.SignatureBounds(){}[0]
final fun (com.niyajali.compose.sign/SignatureBounds).com.niyajali.compose.sign/isSquare(kotlin/Float = ...): kotlin/Boolean // com.niyajali.compose.sign/isSquare|isSquare@com.niyajali.compose.sign.SignatureBounds(kotlin.Float){}[0]
final fun (com.niyajali.compose.sign/SignatureConfig).com.niyajali.compose.sign/asAccessible(kotlin/Boolean = ...): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/asAccessible|asAccessible@com.niyajali.compose.sign.SignatureConfig(kotlin.Boolean){}[0]
final fun (com.niyajali.compose.sign/SignatureConfig).com.niyajali.compose.sign/asDarkTheme(): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/asDarkTheme|asDarkTheme@com.niyajali.compose.sign.SignatureConfig(){}[0]
final fun (com.niyajali.compose.sign/SignatureConfig).com.niyajali.compose.sign/asLightTheme(): com.niyajali.compose.sign/SignatureConfig // com.niyajali.compose.sign/asLightTheme|asLightTheme@com.niyajali.compose.sign.SignatureConfig(){}[0]
final fun (com.niyajali.compose.sign/SignaturePath).com.niyajali.compose.sign/getAngle(): kotlin/Float // com.niyajali.compose.sign/getAngle|getAngle@com.niyajali.compose.sign.SignaturePath(){}[0]
final fun (com.niyajali.compose.sign/SignaturePath).com.niyajali.compose.sign/isHorizontal(kotlin/Float = ...): kotlin/Boolean // com.niyajali.compose.sign/isHorizontal|isHorizontal@com.niyajali.compose.sign.SignaturePath(kotlin.Float){}[0]
final fun (com.niyajali.compose.sign/SignaturePath).com.niyajali.compose.sign/isVertical(kotlin/Float = ...): kotlin/Boolean // com.niyajali.compose.sign/isVertical|isVertical@com.niyajali.compose.sign.SignaturePath(kotlin.Float){}[0]
final fun (com.niyajali.compose.sign/SignatureState).com.niyajali.compose.sign/exportScaledSignature(kotlin/Int, kotlin/Int, kotlin/Boolean = ..., androidx.compose.ui.graphics/Color = ...): androidx.compose.ui.graphics/ImageBitmap? // com.niyajali.compose.sign/exportScaledSignature|exportScaledSignature@com.niyajali.compose.sign.SignatureState(kotlin.Int;kotlin.Int;kotlin.Boolean;androidx.compose.ui.graphics.Color){}[0]
final fun (com.niyajali.compose.sign/SignatureState).com.niyajali.compose.sign/exportSignature(kotlin/Int, kotlin/Int, androidx.compose.ui.graphics/Color = ...): androidx.compose.ui.graphics/ImageBitmap? // com.niyajali.compose.sign/exportSignature|exportSignature@com.niyajali.compose.sign.SignatureState(kotlin.Int;kotlin.Int;androidx.compose.ui.graphics.Color){}[0]
final fun (com.niyajali.compose.sign/SignatureState).com.niyajali.compose.sign/getComplexityScore(): kotlin/Int // com.niyajali.compose.sign/getComplexityScore|getComplexityScore@com.niyajali.compose.sign.SignatureState(){}[0]
final fun (com.niyajali.compose.sign/SignatureState).com.niyajali.compose.sign/getDescription(): kotlin/String // com.niyajali.compose.sign/getDescription|getDescription@com.niyajali.compose.sign.SignatureState(){}[0]
final fun (com.niyajali.compose.sign/SignatureState).com.niyajali.compose.sign/getMetadata(): com.niyajali.compose.sign/SignatureMetadata // com.niyajali.compose.sign/getMetadata|getMetadata@com.niyajali.compose.sign.SignatureState(){}[0]
final fun (com.niyajali.compose.sign/SignatureState).com.niyajali.compose.sign/getSignatureBounds(): com.niyajali.compose.sign/SignatureBounds? // com.niyajali.compose.sign/getSignatureBounds|getSignatureBounds@com.niyajali.compose.sign.SignatureState(){}[0]
final fun (com.niyajali.compose.sign/SignatureState).com.niyajali.compose.sign/getTotalLength(): kotlin/Float // com.niyajali.compose.sign/getTotalLength|getTotalLength@com.niyajali.compose.sign.SignatureState(){}[0]
final fun (com.niyajali.compose.sign/SignatureState).com.niyajali.compose.sign/isEmpty(): kotlin/Boolean // com.niyajali.compose.sign/isEmpty|isEmpty@com.niyajali.compose.sign.SignatureState(){}[0]
final fun (com.niyajali.compose.sign/SignatureState).com.niyajali.compose.sign/isNotEmpty(): kotlin/Boolean // com.niyajali.compose.sign/isNotEmpty|isNotEmpty@com.niyajali.compose.sign.SignatureState(){}[0]
final fun (com.niyajali.compose.sign/SignatureState).com.niyajali.compose.sign/isValid(kotlin/Int = ..., kotlin/Float = ..., kotlin/Int = ...): kotlin/Boolean // com.niyajali.compose.sign/isValid|isValid@com.niyajali.compose.sign.SignatureState(kotlin.Int;kotlin.Float;kotlin.Int){}[0]
final fun (kotlin.collections/List<com.niyajali.compose.sign/SignaturePath>).com.niyajali.compose.sign/filterByColor(androidx.compose.ui.graphics/Color): kotlin.collections/List<com.niyajali.compose.sign/SignaturePath> // com.niyajali.compose.sign/filterByColor|filterByColor@kotlin.collections.List<com.niyajali.compose.sign.SignaturePath>(androidx.compose.ui.graphics.Color){}[0]
final fun (kotlin.collections/List<com.niyajali.compose.sign/SignaturePath>).com.niyajali.compose.sign/filterByStrokeWidth(kotlin/Float, kotlin/Float): kotlin.collections/List<com.niyajali.compose.sign/SignaturePath> // com.niyajali.compose.sign/filterByStrokeWidth|filterByStrokeWidth@kotlin.collections.List<com.niyajali.compose.sign.SignaturePath>(kotlin.Float;kotlin.Float){}[0]
final fun (kotlin.collections/List<com.niyajali.compose.sign/SignaturePath>).com.niyajali.compose.sign/getAverageStrokeWidth(): kotlin/Float // com.niyajali.compose.sign/getAverageStrokeWidth|getAverageStrokeWidth@kotlin.collections.List<com.niyajali.compose.sign.SignaturePath>(){}[0]
final fun (kotlin.collections/List<com.niyajali.compose.sign/SignaturePath>).com.niyajali.compose.sign/getUniqueColors(): kotlin.collections/Set<androidx.compose.ui.graphics/Color> // com.niyajali.compose.sign/getUniqueColors|getUniqueColors@kotlin.collections.List<com.niyajali.compose.sign.SignaturePath>(){}[0]
final fun com.niyajali.compose.sign/ComposeSign(kotlin/Function1<androidx.compose.ui.graphics/ImageBitmap?, kotlin/Unit>, androidx.compose.ui/Modifier?, androidx.compose.ui.graphics/Color, androidx.compose.ui.unit/Dp, androidx.compose.ui.graphics/Color, kotlin/Boolean, com.niyajali.compose.sign/SignatureState?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.niyajali.compose.sign/ComposeSign|ComposeSign(kotlin.Function1<androidx.compose.ui.graphics.ImageBitmap?,kotlin.Unit>;androidx.compose.ui.Modifier?;androidx.compose.ui.graphics.Color;androidx.compose.ui.unit.Dp;androidx.compose.ui.graphics.Color;kotlin.Boolean;com.niyajali.compose.sign.SignatureState?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.niyajali.compose.sign/ComposeSign(kotlin/Function1<androidx.compose.ui.graphics/ImageBitmap?, kotlin/Unit>, androidx.compose.ui/Modifier?, com.niyajali.compose.sign/SignatureConfig?, com.niyajali.compose.sign/SignatureState?, kotlin/Function1<com.niyajali.compose.sign/SignatureAction, kotlin/Unit>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.niyajali.compose.sign/ComposeSign|ComposeSign(kotlin.Function1<androidx.compose.ui.graphics.ImageBitmap?,kotlin.Unit>;androidx.compose.ui.Modifier?;com.niyajali.compose.sign.SignatureConfig?;com.niyajali.compose.sign.SignatureState?;kotlin.Function1<com.niyajali.compose.sign.SignatureAction,kotlin.Unit>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.niyajali.compose.sign/ComposeSign(kotlin/Function1<androidx.compose.ui.graphics/ImageBitmap?, kotlin/Unit>, androidx.compose.ui/Modifier?, com.niyajali.compose.sign/SignatureState?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.niyajali.compose.sign/ComposeSign|ComposeSign(kotlin.Function1<androidx.compose.ui.graphics.ImageBitmap?,kotlin.Unit>;androidx.compose.ui.Modifier?;com.niyajali.compose.sign.SignatureState?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.niyajali.compose.sign/ComposeSignFullscreen(kotlin/Function1<androidx.compose.ui.graphics/ImageBitmap?, kotlin/Unit>, kotlin/Function0<kotlin/Unit>, androidx.compose.ui/Modifier?, com.niyajali.compose.sign/SignatureConfig?, com.niyajali.compose.sign/SignatureState?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.niyajali.compose.sign/ComposeSignFullscreen|ComposeSignFullscreen(kotlin.Function1<androidx.compose.ui.graphics.ImageBitmap?,kotlin.Unit>;kotlin.Function0<kotlin.Unit>;androidx.compose.ui.Modifier?;com.niyajali.compose.sign.SignatureConfig?;com.niyajali.compose.sign.SignatureState?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.niyajali.compose.sign/com_niyajali_compose_sign_DefaultSignatureActionHandler$stableprop_getter(): kotlin/Int // com.niyajali.compose.sign/com_niyajali_compose_sign_DefaultSignatureActionHandler$stableprop_getter|com_niyajali_compose_sign_DefaultSignatureActionHandler$stableprop_getter(){}[0]
final fun com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureActionConfig$stableprop_getter(): kotlin/Int // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureActionConfig$stableprop_getter|com_niyajali_compose_sign_SignatureActionConfig$stableprop_getter(){}[0]
final fun com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureActionResult$stableprop_getter(): kotlin/Int // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureActionResult$stableprop_getter|com_niyajali_compose_sign_SignatureActionResult$stableprop_getter(){}[0]
final fun com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureBounds$stableprop_getter(): kotlin/Int // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureBounds$stableprop_getter|com_niyajali_compose_sign_SignatureBounds$stableprop_getter(){}[0]
final fun com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureConfig$stableprop_getter(): kotlin/Int // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureConfig$stableprop_getter|com_niyajali_compose_sign_SignatureConfig$stableprop_getter(){}[0]
final fun com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureExportConfig$stableprop_getter(): kotlin/Int // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureExportConfig$stableprop_getter|com_niyajali_compose_sign_SignatureExportConfig$stableprop_getter(){}[0]
final fun com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureMetadata$stableprop_getter(): kotlin/Int // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureMetadata$stableprop_getter|com_niyajali_compose_sign_SignatureMetadata$stableprop_getter(){}[0]
final fun com.niyajali.compose.sign/com_niyajali_compose_sign_SignaturePath$stableprop_getter(): kotlin/Int // com.niyajali.compose.sign/com_niyajali_compose_sign_SignaturePath$stableprop_getter|com_niyajali_compose_sign_SignaturePath$stableprop_getter(){}[0]
final fun com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureState$stableprop_getter(): kotlin/Int // com.niyajali.compose.sign/com_niyajali_compose_sign_SignatureState$stableprop_getter|com_niyajali_compose_sign_SignatureState$stableprop_getter(){}[0]
final fun com.niyajali.compose.sign/rememberSignatureState(androidx.compose.runtime/Composer?, kotlin/Int): com.niyajali.compose.sign/SignatureState // com.niyajali.compose.sign/rememberSignatureState|rememberSignatureState(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res$stableprop_getter(): kotlin/Int // io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res$stableprop_getter|io_github_niyajali_compose_signature_generated_resources_Res$stableprop_getter(){}[0]
final fun io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_array$stableprop_getter(): kotlin/Int // io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_array$stableprop_getter|io_github_niyajali_compose_signature_generated_resources_Res_array$stableprop_getter(){}[0]
final fun io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_drawable$stableprop_getter(): kotlin/Int // io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_drawable$stableprop_getter|io_github_niyajali_compose_signature_generated_resources_Res_drawable$stableprop_getter(){}[0]
final fun io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_font$stableprop_getter(): kotlin/Int // io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_font$stableprop_getter|io_github_niyajali_compose_signature_generated_resources_Res_font$stableprop_getter(){}[0]
final fun io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_plurals$stableprop_getter(): kotlin/Int // io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_plurals$stableprop_getter|io_github_niyajali_compose_signature_generated_resources_Res_plurals$stableprop_getter(){}[0]
final fun io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_string$stableprop_getter(): kotlin/Int // io.github.niyajali.compose_signature.generated.resources/io_github_niyajali_compose_signature_generated_resources_Res_string$stableprop_getter|io_github_niyajali_compose_signature_generated_resources_Res_string$stableprop_getter(){}[0]
